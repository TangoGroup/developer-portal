{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "servers": [
        {
            "url": "https://api.gloo.ai"
        }
    ],
    "paths": {
        "/auth/{v}/routes": {
            "post": {
                "tags": [
                    "Authentication & Authorization"
                ],
                "summary": "Check Route Authorization",
                "operationId": "check_route_authorization_auth__v__routes_post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RouteAuthorizationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/{v}/invitations": {
            "post": {
                "tags": [
                    "Authentication & Authorization"
                ],
                "summary": "Create Files",
                "operationId": "create_files_auth__v__invitations_post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": true,
                                "title": "Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Create Files Auth  V  Invitations Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/{v}/forgot-password": {
            "post": {
                "tags": [
                    "Authentication & Authorization"
                ],
                "summary": "Request Password Reset",
                "description": "Request a password reset code to be sent to the user's email.",
                "operationId": "request_password_reset_auth__v__forgot_password_post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Request Password Reset Auth  V  Forgot Password Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/{v}/confirm-forgot-password": {
            "post": {
                "tags": [
                    "Authentication & Authorization"
                ],
                "summary": "Confirm Password Reset",
                "description": "Confirm the password reset using the code sent to the user's email.",
                "operationId": "confirm_password_reset_auth__v__confirm_forgot_password_post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Confirm Password Reset Auth  V  Confirm Forgot Password Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/{v}/request-confirmation-email": {
            "get": {
                "tags": [
                    "Authentication & Authorization"
                ],
                "summary": "Request Confirmation Email",
                "operationId": "request_confirmation_email_auth__v__request_confirmation_email_get",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Request Confirmation Email Auth  V  Request Confirmation Email Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/{v}/confirm-email": {
            "get": {
                "tags": [
                    "Authentication & Authorization"
                ],
                "summary": "Confirm Email",
                "operationId": "confirm_email_auth__v__confirm_email_get",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Confirm Email Auth  V  Confirm Email Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingestion/{v}/document/": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Upload Document To Weaviate",
                "operationId": "upload_document_to_weaviate_ingestion__v__document__post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingestion/{v}/documents/": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Unzip And Upload Documents To Weaviate",
                "operationId": "unzip_and_upload_documents_to_weaviate_ingestion__v__documents__post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingestion/{v}/ingest/excel": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Process Excel Data",
                "operationId": "process_excel_data_ingestion__v__ingest_excel_post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExcelDocumentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingestion/{v}/upload_zip_with_metadata": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Upload Zip With Metadata",
                "operationId": "upload_zip_with_metadata_ingestion__v__upload_zip_with_metadata_post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetadataMapModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingestion/{v}/upload_whisper_transcripts/": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Upload Whisper Transcripts",
                "operationId": "upload_whisper_transcripts_ingestion__v__upload_whisper_transcripts__post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WhisperTranscriptMetadataModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingestion/{v}/real_time_upload": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Real Time Upload",
                "operationId": "real_time_upload_ingestion__v__real_time_upload_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RealTimeDocumentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingestion/{v}/status/{batch_id}": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Get Status",
                "operationId": "get_status_ingestion__v__status__batch_id__get",
                "parameters": [
                    {
                        "name": "batch_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Batch Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingestion/{v}/ingest": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Ingest File Or Zip",
                "operationId": "ingest_file_or_zip_ingestion__v__ingest_post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IngestionDocumentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingestion/{v}/media": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Ingest Audio Video Articles",
                "operationId": "ingest_audio_video_articles_ingestion__v__media_post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MediaDocumentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingestion/{v}/whisper-callback": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Whisper Callback",
                "operationId": "whisper_callback_ingestion__v__whisper_callback_post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TranscribedItemDetails"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/items/{item_id}/enrichment": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Get Enrichment",
                "description": "Get the enrichment data for an item",
                "operationId": "get_enrichment_engine__v__items__item_id__enrichment_get",
                "parameters": [
                    {
                        "name": "item_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Update Enrichment Field",
                "description": "Update a specific field in the enrichment data",
                "operationId": "update_enrichment_field_engine__v__items__item_id__enrichment_patch",
                "parameters": [
                    {
                        "name": "item_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnrichmentUpdateModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/ingested-data/upload-url": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Create Presigned Upload Url",
                "operationId": "create_presigned_upload_url_engine__v__ingested_data_upload_url_post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PresignedUrlRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PresignedUrlResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/ingested-data/uploads": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "List Uploaded Files",
                "operationId": "list_uploaded_files_engine__v__ingested_data_uploads_get",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "folder_paths",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Folder Paths"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/ingested-data": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Create Ingested Data",
                "operationId": "create_ingested_data_engine__v__ingested_data_post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesInsertRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileInsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/ingested-data/items": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Get Ingested Data By Ids",
                "operationId": "get_ingested_data_by_ids_engine__v__ingested_data_items_get",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "item_ids",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IngestedDataItem"
                                    },
                                    "title": "Response Get Ingested Data By Ids Engine  V  Ingested Data Items Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/ingested-data/query": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Ingestion & Enrichment"
                ],
                "summary": "Query Ingested Data",
                "operationId": "query_ingested_data_engine__v__ingested_data_query_post",
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetIngestedDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestedDataResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/publishers": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Publishers & Organizations"
                ],
                "summary": "Get publishers list",
                "description": "Retrieve a list of publishers based on user role and permissions.\n    \n    - Global Admin\n        - Can view all publishers\n        - Can filter by organization ID\n    \n    - Organization Admin\n        - Can only view publishers within their organization\n        - Cannot access publishers from other organizations\n    \n    - Other Roles\n        - No access to this endpoint",
                "operationId": "get_publishers_engine__v__publishers_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of publishers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PublisherResponse"
                                    },
                                    "title": "Response Get Publishers Engine  V  Publishers Get"
                                },
                                "example": [
                                    {
                                        "id": "123e4567-e89b-12d3-a456-426614174000",
                                        "name": "Publisher Name",
                                        "organization_id": "123e4567-e89b-12d3-a456-426614174001",
                                        "publisher_logo": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_logo.png",
                                        "publisher_fav": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_favicon.png",
                                        "publisher_bw": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_bw.svg",
                                        "publisher_url": "https://example.com",
                                        "publisher_hierarchy": "Parent Publisher",
                                        "publisher_hierarchy_logo": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/parent_logo.png",
                                        "publisher_hierarchy_fav": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/parent_favicon.png",
                                        "publisher_hierarchy_bw": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/parent_bw.svg",
                                        "publisher_hierarchy_url": "https://parent.example.com",
                                        "drm": [
                                            "Type1",
                                            "Type2"
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Forbidden"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Data Engine",
                    "Publishers & Organizations"
                ],
                "summary": "Create a new publisher",
                "description": "Creates a new publisher with optional image assets and organization assignment.\n    \n    **Permission Requirements:**\n    - Global Admin: Can create publishers for any organization, or create a new organization\n    - Organization Admin: Can only create publishers for their own organization\n    \n    **Organization Handling:**\n    - If organization_id is provided: Uses the specified organization (permission check applied)\n    - If no organization_id is provided:\n      - For Global Admins: Creates a new organization with the same name as the publisher\n      - For Org Admins: Uses their current organization\n    \n    **S3 Directory Creation:**\n    This endpoint automatically creates S3 directories for the new publisher with the structure:\n    - {publisher_name}/\n      - audio/\n        - metadata/\n      - video/\n        - metadata/\n      - books/\n        - metadata/\n      - articles/\n        - metadata/",
                "operationId": "create_publishers_engine__v__publishers_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublisherCreateRequest",
                                "examples": {
                                    "basic": {
                                        "summary": "Basic Publisher",
                                        "description": "Create a basic publisher with name only",
                                        "value": {
                                            "name": "Example Publisher"
                                        }
                                    },
                                    "with_org": {
                                        "summary": "Publisher with Organization",
                                        "description": "Create a publisher and assign to existing organization",
                                        "value": {
                                            "name": "Example Publisher",
                                            "organization_id": "123e4567-e89b-12d3-a456-426614174001"
                                        }
                                    },
                                    "complete": {
                                        "summary": "Complete Publisher",
                                        "description": "Create a publisher with all available fields",
                                        "value": {
                                            "name": "Example Publisher",
                                            "organization_id": "123e4567-e89b-12d3-a456-426614174001",
                                            "publisher_logo": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_logo.png",
                                            "publisher_fav": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_favicon.png",
                                            "publisher_bw": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_bw.svg",
                                            "publisher_url": "https://example.com",
                                            "drm": [
                                                "Type1",
                                                "Type2"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Publisher created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublisherResponse"
                                },
                                "example": {
                                    "id": "123e4567-e89b-12d3-a456-426614174000",
                                    "name": "Example Publisher",
                                    "organization_id": "123e4567-e89b-12d3-a456-426614174001",
                                    "publisher_logo": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_logo.png",
                                    "publisher_fav": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_favicon.png",
                                    "publisher_bw": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_bw.svg"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid data",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Invalid request data"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Forbidden: You can only create publishers for your own organization"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "An error occurred while creating the publisher"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/publishers/{publisher_id}": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Publishers & Organizations"
                ],
                "summary": "Get Publisher",
                "operationId": "get_publisher_engine__v__publishers__publisher_id__get",
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Publisher Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublisherResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Data Engine",
                    "Publishers & Organizations"
                ],
                "summary": "Update publisher details",
                "description": "Update an existing publisher's information.\n    \n    **Permission Requirements:**\n    - Global Admin: Can update any publisher\n    - Organization Admin: Can only update publishers within their organization\n    \n    Fields that can be updated:\n    - publisher_logo\n    - publisher_fav\n    - publisher_bw\n    - publisher_url\n    - publisher_hierarchy\n    - publisher_hierarchy_logo\n    - publisher_hierarchy_fav\n    - publisher_hierarchy_bw\n    - publisher_hierarchy_url\n    - drm\n    \n    Note: Publisher name cannot be modified after creation.",
                "operationId": "update_publisher_engine__v__publishers__publisher_id__patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Publisher Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublisherCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Publisher updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublisherResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Publisher not found"
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/publishers/presigned-url": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Publishers & Organizations"
                ],
                "summary": "Generate presigned URL for publisher image upload",
                "description": "Generates a presigned URL to upload publisher images directly to S3.\n    \n    This endpoint provides:\n    - A presigned URL for direct browser-to-S3 upload\n    - The final URL where the image will be accessible after upload\n    - S3 bucket and key information\n    \n    Supported image types:\n    - PNG files (image/png)\n    - SVG files (image/svg+xml)\n    \n    The presigned URL expires after 1 hour.",
                "operationId": "get_presigned_url_engine__v__publishers_presigned_url_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PresignedUrlRequest",
                                "examples": {
                                    "png_example": {
                                        "summary": "PNG Logo Upload",
                                        "description": "Request for uploading a PNG logo file",
                                        "value": {
                                            "fileName": "publisher_logo.png",
                                            "fileType": "image/png",
                                            "uploadType": "normal"
                                        }
                                    },
                                    "svg_example": {
                                        "summary": "SVG Logo Upload",
                                        "description": "Request for uploading an SVG logo file",
                                        "value": {
                                            "fileName": "publisher_logo.svg",
                                            "fileType": "image/svg+xml",
                                            "uploadType": "normal"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully generated presigned URL",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Presigned Url Engine  V  Publishers Presigned Url Post"
                                },
                                "example": {
                                    "presigned_url": "https://dapologeticsimages.s3.amazonaws.com/logos/publisher_logo.png?AWSAccessKeyId=XXXX&Signature=YYYY&Expires=1234567890",
                                    "file_url": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/publisher_logo.png",
                                    "key": "logos/publisher_logo.png",
                                    "bucket": "dapologeticsimages"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Invalid file type. Supported types: image/png, image/svg+xml"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Forbidden"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Failed to generate upload URL"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/organizations": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Publishers & Organizations"
                ],
                "summary": "Get Organizations",
                "operationId": "get_organizations_engine__v__organizations_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationCollectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Data Engine",
                    "Publishers & Organizations"
                ],
                "summary": "Create Organization",
                "operationId": "create_organization_engine__v__organizations_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/organizations/{organization_id}": {
            "put": {
                "tags": [
                    "Data Engine",
                    "Publishers & Organizations"
                ],
                "summary": "Update Organization",
                "operationId": "update_organization_engine__v__organizations__organization_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/organizations/{organization_id}/activate": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Publishers & Organizations"
                ],
                "summary": "Activate Organization",
                "description": "Activate an organization by setting its is_active flag to true.\nThis endpoint only updates the organization's active status.",
                "operationId": "activate_organization_engine__v__organizations__organization_id__activate_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/statistics/summary/organizations": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Statistics"
                ],
                "summary": "Get organization statistics summary",
                "description": "Returns organization statistics in a hierarchical format.\n    \n    Role-based access:\n    \n    - Global Admin: Complete view of organizations with activity metrics\n    - Other roles: Not authorized to access statistics\n    \n    The response structure depends on the authenticated user's role.",
                "operationId": "get_organization_summary_engine__v__statistics_summary_organizations_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "activity_period_start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Start date for the activity period (inclusive)",
                            "title": "Activity Period Start Date"
                        },
                        "description": "Start date for the activity period (inclusive)"
                    },
                    {
                        "name": "activity_period_end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "End date for the activity period (inclusive)",
                            "title": "Activity Period End Date"
                        },
                        "description": "End date for the activity period (inclusive)"
                    },
                    {
                        "name": "activity_threshold",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Minimum number of items required for an entity to be considered 'active' in the specified period",
                            "default": 1,
                            "title": "Activity Threshold"
                        },
                        "description": "Minimum number of items required for an entity to be considered 'active' in the specified period",
                        "example": 5
                    },
                    {
                        "name": "seven_days_threshold",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Minimum number of items for an entity to be considered active in the 7-day activity report",
                            "default": 1,
                            "title": "Seven Days Threshold"
                        },
                        "description": "Minimum number of items for an entity to be considered active in the 7-day activity report",
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with organization statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Organization Summary Engine  V  Statistics Summary Organizations Get"
                                },
                                "examples": {
                                    "global_admin": {
                                        "summary": "Global Admin Statistics",
                                        "description": "Complete statistics for all organizations",
                                        "value": {
                                            "organizations": {
                                                "total": {
                                                    "count": 32,
                                                    "change": 2
                                                },
                                                "status": {
                                                    "active": {
                                                        "count": 13,
                                                        "change": 1
                                                    },
                                                    "inactive": {
                                                        "count": 19,
                                                        "change": -1
                                                    }
                                                }
                                            },
                                            "7_days_activity": {
                                                "organizations": {
                                                    "total_change": 2,
                                                    "active_change": 1,
                                                    "inactive_change": -1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "User is not authorized to access statistics",
                                    "code": "UNAUTHORIZED",
                                    "error": "User is not authorized to access statistics"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Failed to generate organization statistics"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/statistics/summary/publishers": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Statistics"
                ],
                "summary": "Get publisher statistics summary",
                "description": "Returns publisher statistics in a hierarchical format.\n    \n    Role-based access:\n    \n    - Global Admin: Complete view of all publishers with activity metrics\n    - Organization Admin: Limited view of publishers within their organization\n    - Other roles: Not authorized to access statistics\n    \n    The response structure depends on the authenticated user's role.",
                "operationId": "get_publisher_summary_engine__v__statistics_summary_publishers_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "activity_period_start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Start date for the activity period (inclusive)",
                            "title": "Activity Period Start Date"
                        },
                        "description": "Start date for the activity period (inclusive)"
                    },
                    {
                        "name": "activity_period_end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "End date for the activity period (inclusive)",
                            "title": "Activity Period End Date"
                        },
                        "description": "End date for the activity period (inclusive)"
                    },
                    {
                        "name": "activity_threshold",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Minimum number of items required for an entity to be considered 'active' in the specified period",
                            "default": 1,
                            "title": "Activity Threshold"
                        },
                        "description": "Minimum number of items required for an entity to be considered 'active' in the specified period",
                        "example": 5
                    },
                    {
                        "name": "seven_days_threshold",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Minimum number of items for an entity to be considered active in the 7-day activity report",
                            "default": 1,
                            "title": "Seven Days Threshold"
                        },
                        "description": "Minimum number of items for an entity to be considered active in the 7-day activity report",
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with publisher statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Publisher Summary Engine  V  Statistics Summary Publishers Get"
                                },
                                "examples": {
                                    "global_admin": {
                                        "summary": "Global Admin Publisher Statistics",
                                        "description": "Complete statistics for all publishers",
                                        "value": {
                                            "publishers": {
                                                "total": {
                                                    "count": 118,
                                                    "change": 4
                                                },
                                                "status": {
                                                    "active": {
                                                        "count": 16,
                                                        "change": 1
                                                    },
                                                    "inactive": {
                                                        "count": 102,
                                                        "change": -1
                                                    }
                                                }
                                            },
                                            "7_days_activity": {
                                                "publishers": {
                                                    "total_change": 4,
                                                    "active_change": 1,
                                                    "inactive_change": -1
                                                }
                                            }
                                        }
                                    },
                                    "org_admin": {
                                        "summary": "Organization Admin Publisher Statistics",
                                        "description": "Statistics for publishers within a specific organization",
                                        "value": {
                                            "publishers": {
                                                "total": {
                                                    "count": 10,
                                                    "change": 1
                                                },
                                                "status": {
                                                    "active": {
                                                        "count": 8,
                                                        "change": 1
                                                    },
                                                    "inactive": {
                                                        "count": 2,
                                                        "change": -1
                                                    }
                                                }
                                            },
                                            "7_days_activity": {
                                                "publishers": {
                                                    "total_change": 1,
                                                    "active_change": 1,
                                                    "inactive_change": -1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "User is not authorized to access statistics",
                                    "code": "UNAUTHORIZED",
                                    "error": "User is not authorized to access statistics"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Failed to generate publisher statistics"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/statistics/summary/ingestion": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Statistics"
                ],
                "summary": "Get ingestion statistics summary data",
                "description": "Get summary statistics for chunks and files ingested by publishers.\n    \n    Returns aggregate counts by content type for both files and chunks.\n    The counts data provides total counts and breakdowns by content type (Article, Book, Video, Podcast, Audio).\n\n    Role-Based Access:\n    - Global Admin: Can access all data or filter by specific publishers\n    - Organization Admin: Can only access data for publishers within their organization\n    - Publisher: Can only access data for the publishers they have ingested",
                "operationId": "get_ingestion_summary_engine__v__statistics_summary_ingestion_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IngestionSummaryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with summary data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionSummaryResponse-Input"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access or invalid role",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": {
                                        "message": "User is not authorized to access statistics",
                                        "code": "UNAUTHORIZED",
                                        "error": "User is not authorized to access statistics"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - invalid publisher ID for organization admin",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "One or more publisher IDs are not valid for this organization"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/statistics/timeseries/organizations": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Statistics"
                ],
                "summary": "Get Organization Timeseries",
                "description": "Retrieve timeseries data for active/inactive organizations.\n\nParameters:\n- start_date: Start date for the time range (default: 30 days ago)\n- end_date: End date for the time range (default: today)\n\nReturns:\n- active_organizations: Array of [timestamp, count] pairs showing active organizations per day\n- inactive_organizations: Array of [timestamp, count] pairs showing inactive organizations per day\n- total_organizations: Array of [timestamp, count] pairs showing total organizations per day",
                "operationId": "get_organization_timeseries_engine__v__statistics_timeseries_organizations_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Start date for the time range (format: YYYY-MM-DD)",
                            "title": "Start Date"
                        },
                        "description": "Start date for the time range (format: YYYY-MM-DD)"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "End date for the time range (format: YYYY-MM-DD)",
                            "title": "End Date"
                        },
                        "description": "End date for the time range (format: YYYY-MM-DD)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Organization Timeseries Engine  V  Statistics Timeseries Organizations Get"
                                },
                                "example": {
                                    "active_organizations": [
                                        [
                                            1646092800000,
                                            5
                                        ],
                                        [
                                            1646179200000,
                                            7
                                        ],
                                        [
                                            1646265600000,
                                            6
                                        ]
                                    ],
                                    "inactive_organizations": [
                                        [
                                            1646092800000,
                                            10
                                        ],
                                        [
                                            1646179200000,
                                            8
                                        ],
                                        [
                                            1646265600000,
                                            9
                                        ]
                                    ],
                                    "total_organizations": [
                                        [
                                            1646092800000,
                                            15
                                        ],
                                        [
                                            1646179200000,
                                            15
                                        ],
                                        [
                                            1646265600000,
                                            15
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": {
                                        "message": "User is not authorized to access statistics",
                                        "code": "UNAUTHORIZED",
                                        "error": "User is not authorized to access statistics"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Not authenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/statistics/timeseries/publishers": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Statistics"
                ],
                "summary": "Get Publisher Timeseries",
                "description": "Retrieve timeseries data for active/inactive publishers.\n\nParameters:\n- start_date: Start date for the time range (default: 30 days ago)\n- end_date: End date for the time range (default: today)\n\nReturns:\n- active_publishers: Array of [timestamp, count] pairs showing active publishers per day\n- inactive_publishers: Array of [timestamp, count] pairs showing inactive publishers per day\n- total_publishers: Array of [timestamp, count] pairs showing total publishers per day",
                "operationId": "get_publisher_timeseries_engine__v__statistics_timeseries_publishers_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Start date for the time range (format: YYYY-MM-DD)",
                            "title": "Start Date"
                        },
                        "description": "Start date for the time range (format: YYYY-MM-DD)"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "End date for the time range (format: YYYY-MM-DD)",
                            "title": "End Date"
                        },
                        "description": "End date for the time range (format: YYYY-MM-DD)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Publisher Timeseries Engine  V  Statistics Timeseries Publishers Get"
                                },
                                "example": {
                                    "active_publishers": [
                                        [
                                            1646092800000,
                                            12
                                        ],
                                        [
                                            1646179200000,
                                            15
                                        ],
                                        [
                                            1646265600000,
                                            14
                                        ]
                                    ],
                                    "inactive_publishers": [
                                        [
                                            1646092800000,
                                            8
                                        ],
                                        [
                                            1646179200000,
                                            5
                                        ],
                                        [
                                            1646265600000,
                                            6
                                        ]
                                    ],
                                    "total_publishers": [
                                        [
                                            1646092800000,
                                            20
                                        ],
                                        [
                                            1646179200000,
                                            20
                                        ],
                                        [
                                            1646265600000,
                                            20
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": {
                                        "message": "User is not authorized to access statistics",
                                        "code": "FORBIDDEN",
                                        "error": "User is not authorized to access statistics"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/statistics/timeseries/ingestion": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Statistics"
                ],
                "summary": "Get ingestion statistics timeseries data",
                "description": "Get ingestion timeseries statistics for chunks and files ingested by publishers.\n    \n    Returns timeseries data for file and chunk counts over time.\n    \n    The timeseries data consists of arrays of [timestamp, count] pairs for both files and chunks.\n\n    Role-Based Access:\n    - Global Admin: Can access all data or filter by specific publishers\n    - Organization Admin: Can only access data for publishers within their organization\n    - Publisher: Can only access data for the publishers they have ingested",
                "operationId": "get_ingestion_timeseries_engine__v__statistics_timeseries_ingestion_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IngestionTimeseriesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with timeseries data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionTimeseriesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access or invalid role",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": {
                                        "message": "User is not authorized to access statistics",
                                        "code": "UNAUTHORIZED",
                                        "error": "User is not authorized to access statistics"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - invalid publisher ID for organization admin",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "One or more publisher IDs are not valid for this organization"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/organizations/{organization_id}/components": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Components"
                ],
                "summary": "List Component Configs",
                "description": "List all component configs for an organization.",
                "operationId": "list_component_configs_engine__v__organizations__organization_id__components_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ComponentConfigResponse"
                                    },
                                    "title": "Response List Component Configs Engine  V  Organizations  Organization Id  Components Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Data Engine",
                    "Components"
                ],
                "summary": "Create Component Config",
                "description": "Create a new component config.",
                "operationId": "create_component_config_engine__v__organizations__organization_id__components_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ComponentConfigCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComponentConfigResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/organizations/{organization_id}/components/{slug_id}": {
            "put": {
                "tags": [
                    "Data Engine",
                    "Components"
                ],
                "summary": "Update Component Config",
                "description": "Update a component config.",
                "operationId": "update_component_config_engine__v__organizations__organization_id__components__slug_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "slug_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Slug Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ComponentConfigUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComponentConfigResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Data Engine",
                    "Components"
                ],
                "summary": "Delete Component Config",
                "description": "Delete a component config.",
                "operationId": "delete_component_config_engine__v__organizations__organization_id__components__slug_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "slug_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Slug Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/components/{slug_id}": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Components"
                ],
                "summary": "Get Component Config By Slug",
                "description": "Get a component config by slug.",
                "operationId": "get_component_config_by_slug_engine__v__components__slug_id__get",
                "parameters": [
                    {
                        "name": "slug_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Slug Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComponentConfigSlugResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/users": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Authorization"
                ],
                "summary": "Create User",
                "operationId": "create_user_engine__v__users_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/users/{auth_id}": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Authorization"
                ],
                "summary": "Get User",
                "operationId": "get_user_engine__v__users__auth_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "auth_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Auth Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserWithOrganizationsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/credentials": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Credentials"
                ],
                "summary": "Create User Key",
                "description": "Create a new API key, optionally associated with an organization.\nThis endpoint allows users to create personal API keys or organization keys.\nIf organization_id is \"Personal Credentials\", creates a personal credential with no organization association.",
                "operationId": "create_user_key_engine__v__credentials_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "Optional organization ID to associate with the key",
                                "title": "Organization Id"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Data Engine",
                    "Credentials"
                ],
                "summary": "Get Credentials",
                "description": "Get API keys, either for an organization or Personal Credentials for the current user.\nIf organization_id is provided, returns keys for that organization.\nIf not, returns Personal Credentials for the current user.\nSpecial case: If organization_id is \"Personal Credentials\" and user is an admin, returns all Personal Credentials.",
                "operationId": "get_credentials_engine__v__credentials_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Optional organization ID to filter keys",
                            "title": "Organization Id"
                        },
                        "description": "Optional organization ID to filter keys"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/credentials/{credential_id}": {
            "delete": {
                "tags": [
                    "Data Engine",
                    "Credentials"
                ],
                "summary": "Delete Credential",
                "description": "Delete an API credential, either a personal credential or an organization credential.\nIf organization_id is provided and not \"Personal Credentials\", validates organization access.\nIf organization_id is \"Personal Credentials\", validates that the credential belongs to the current user.\nIf no organization_id is provided, assumes it's a personal credential.\nOrganization admins can delete any credential within their organization.\nAdmin users can delete any credential.",
                "operationId": "delete_credential_engine__v__credentials__credential_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Credential Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Optional organization ID the credential belongs to",
                            "title": "Organization Id"
                        },
                        "description": "Optional organization ID the credential belongs to"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/licensing/configurations": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Licensing"
                ],
                "summary": "Get All Licensing Configurations",
                "description": "Retrieve all licensing configurations across all organizations.\nRequires global administrator role.",
                "operationId": "get_all_licensing_configurations_engine__v__licensing_configurations_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ContentProtectionResponse"
                                    },
                                    "type": "array",
                                    "title": "Response Get All Licensing Configurations Engine  V  Licensing Configurations Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/engine/{v}/licensing/organizations/{organization_id}/configurations": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Licensing"
                ],
                "summary": "Get Organization Licensing Configuration",
                "description": "Get organization-level licensing configuration.",
                "operationId": "get_organization_licensing_configuration_engine__v__licensing_organizations__organization_id__configurations_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentProtectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Data Engine",
                    "Licensing"
                ],
                "summary": "Create Organization Licensing Configuration",
                "description": "Create organization-level licensing configuration.\nValidates that all license versions have been accepted before creating.",
                "operationId": "create_organization_licensing_configuration_engine__v__licensing_organizations__organization_id__configurations_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentProtectionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentProtectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/licensing/organizations/{organization_id}/configurations/{licensing_id}": {
            "patch": {
                "tags": [
                    "Data Engine",
                    "Licensing"
                ],
                "summary": "Update Organization Licensing Configuration",
                "description": "Update organization-level licensing configuration.",
                "operationId": "update_organization_licensing_configuration_engine__v__licensing_organizations__organization_id__configurations__licensing_id__patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "licensing_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Licensing Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentProtectionPatch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentProtectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/licensing/publishers/{publisher_id}/configurations": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Licensing"
                ],
                "summary": "Get Publisher Licensing Configuration",
                "description": "Get publisher-specific licensing configuration.\nFalls back to organization settings if no publisher-specific config exists.",
                "operationId": "get_publisher_licensing_configuration_engine__v__licensing_publishers__publisher_id__configurations_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Publisher Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentProtectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Data Engine",
                    "Licensing"
                ],
                "summary": "Create Publisher Licensing Configuration",
                "description": "Create publisher-specific licensing configuration.\nValidates that all license versions have been accepted before creating.",
                "operationId": "create_publisher_licensing_configuration_engine__v__licensing_publishers__publisher_id__configurations_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Publisher Id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentProtectionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentProtectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/licensing/publishers/{publisher_id}/configurations/{licensing_id}": {
            "patch": {
                "tags": [
                    "Data Engine",
                    "Licensing"
                ],
                "summary": "Update Publisher Licensing Configuration",
                "description": "Update publisher-specific licensing configuration.",
                "operationId": "update_publisher_licensing_configuration_engine__v__licensing_publishers__publisher_id__configurations__licensing_id__patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Publisher Id"
                        }
                    },
                    {
                        "name": "licensing_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Licensing Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentProtectionPatch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentProtectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Data Engine",
                    "Licensing"
                ],
                "summary": "Delete Publisher Licensing Configuration",
                "description": "Delete publisher-specific licensing configuration.\n\nThis will cause the publisher to fall back to organization-level settings.\nOnly publisher-specific configurations can be deleted, not organization-level ones.",
                "operationId": "delete_publisher_licensing_configuration_engine__v__licensing_publishers__publisher_id__configurations__licensing_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Publisher Id"
                        }
                    },
                    {
                        "name": "licensing_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Licensing Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/licensing/organizations/{organization_id}/license-versions/{license_version_id}/accept": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Licensing"
                ],
                "summary": "Accept License Version By Organization",
                "description": "Accept a specific license version for an organization.\n\nFinds the organization's licensing configuration and marks the specified license version\nas accepted. Creates the mapping if it doesn't exist.\n\nIf the license version has already been accepted, returns a 200 OK with the mapping.",
                "operationId": "accept_license_version_by_organization_engine__v__licensing_organizations__organization_id__license_versions__license_version_id__accept_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "license_version_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "License Version Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseVersionMappingResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/licensing/publishers/{publisher_id}/license-versions/{license_version_id}/accept": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Licensing"
                ],
                "summary": "Accept License Version By Publisher",
                "description": "Accept a specific license version for a publisher.\n\nFinds the publisher's licensing configuration and marks the specified license version\nas accepted. Creates the mapping if it doesn't exist.\n\nIf the license version has already been accepted, returns a 200 OK with the mapping.",
                "operationId": "accept_license_version_by_publisher_engine__v__licensing_publishers__publisher_id__license_versions__license_version_id__accept_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Publisher Id"
                        }
                    },
                    {
                        "name": "license_version_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "License Version Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseVersionMappingResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/licensing/organizations/{organization_id}/license-versions/latest-unaccepted": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Licensing"
                ],
                "summary": "Get Latest Unaccepted License Version By Organization",
                "description": "Get the latest unaccepted license version for an organization.\n\nReturns the most recent license version that hasn't been accepted yet by the organization.\nIf all license versions have been accepted, returns 204 No Content.",
                "operationId": "get_latest_unaccepted_license_version_by_organization_engine__v__licensing_organizations__organization_id__license_versions_latest_unaccepted_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/LicenseVersionResponse"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Get Latest Unaccepted License Version By Organization Engine  V  Licensing Organizations  Organization Id  License Versions Latest Unaccepted Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/licensing/publishers/{publisher_id}/license-versions/latest-unaccepted": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Licensing"
                ],
                "summary": "Get Latest Unaccepted License Version By Publisher",
                "description": "Get the latest unaccepted license version for a publisher.\n\nReturns the most recent license version that hasn't been accepted yet by the publisher.\nIf all license versions have been accepted, returns 204 No Content.",
                "operationId": "get_latest_unaccepted_license_version_by_publisher_engine__v__licensing_publishers__publisher_id__license_versions_latest_unaccepted_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Publisher Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/LicenseVersionResponse"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Get Latest Unaccepted License Version By Publisher Engine  V  Licensing Publishers  Publisher Id  License Versions Latest Unaccepted Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/platforms/categories": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Platforms"
                ],
                "summary": "Get All Platform Categories",
                "description": "Retrieve all platform categories.\n\nRequires authentication and global administrator or organization\nadministrator role.",
                "operationId": "get_all_platform_categories_engine__v__platforms_categories_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PlatformCategoryResponse"
                                    },
                                    "type": "array",
                                    "title": "Response Get All Platform Categories Engine  V  Platforms Categories Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Data Engine",
                    "Platforms"
                ],
                "summary": "Create Platform Category",
                "description": "Create a new platform category.\n\nCreates a category for grouping platforms together. Category names must be unique.\n\nRequires authentication and global administrator role.",
                "operationId": "create_platform_category_engine__v__platforms_categories_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlatformCategoryCreate"
                            },
                            "examples": {
                                "basic": {
                                    "summary": "Basic Category Creation",
                                    "description": "Create a basic platform category with minimal required fields",
                                    "value": {
                                        "name": "Social Media",
                                        "description": "Platforms for social media sharing",
                                        "is_active": true
                                    }
                                },
                                "inactive": {
                                    "summary": "Inactive Category Creation",
                                    "description": "Create a category that starts in inactive state",
                                    "value": {
                                        "name": "Legacy Platforms",
                                        "description": "Old platforms being phased out",
                                        "is_active": false
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformCategoryResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/engine/{v}/platforms/categories/{category_id}": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Platforms"
                ],
                "summary": "Get Platform Category",
                "description": "Retrieve a specific platform category by ID.\n\nRequires authentication and global administrator or organization\nadministrator role.",
                "operationId": "get_platform_category_engine__v__platforms_categories__category_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Category Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformCategoryResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Data Engine",
                    "Platforms"
                ],
                "summary": "Update Platform Category",
                "description": "Update an existing platform category's details.\n\nAllows partial updates to a category's name, description, and active status.\nAll fields are optional. Only provided fields will be updated.\nCategory names must remain unique.\n\nRequires authentication and global administrator role.",
                "operationId": "update_platform_category_engine__v__platforms_categories__category_id__patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Category Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlatformCategoryUpdate"
                            },
                            "examples": {
                                "basic": {
                                    "summary": "Basic Category Update",
                                    "description": "Update a category with minimal fields",
                                    "value": {
                                        "name": "Updated Category Name",
                                        "description": "Updated Category Description",
                                        "is_active": true
                                    }
                                },
                                "deactivate": {
                                    "summary": "Deactivate Category",
                                    "description": "Update a category to inactive state",
                                    "value": {
                                        "is_active": false
                                    }
                                },
                                "partial_update": {
                                    "summary": "Partial Category Update",
                                    "description": "Update only specific fields of a category",
                                    "value": {
                                        "name": "Updated Category Name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformCategoryResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/platforms": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Platforms"
                ],
                "summary": "Create Platform",
                "description": "Create a new platform.\n\nCreates a platform entity that can be used in licensing configurations.\nPlatform names must be unique.\n\nRequires authentication and global administrator role.",
                "operationId": "create_platform_engine__v__platforms_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlatformCreate"
                            },
                            "examples": {
                                "basic": {
                                    "summary": "Basic Platform Creation",
                                    "description": "Create a basic platform with required fields",
                                    "value": {
                                        "name": "Platform Name",
                                        "description": "Platform Description",
                                        "category_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                        "is_active": true
                                    }
                                },
                                "with_detailed_info": {
                                    "summary": "Platform with Detailed Info",
                                    "description": "Create a platform with detailed information",
                                    "value": {
                                        "name": "Platform Name",
                                        "description": "Detailed platform description with specific features and capabilities",
                                        "category_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                        "is_active": true
                                    }
                                },
                                "inactive": {
                                    "summary": "Inactive Platform Creation",
                                    "description": "Create a platform that starts in inactive state",
                                    "value": {
                                        "name": "Platform Name",
                                        "description": "Platform Description",
                                        "category_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                        "is_active": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Data Engine",
                    "Platforms"
                ],
                "summary": "Get All Platforms",
                "description": "Retrieve all platforms.\n\n- Global administrators receive a list of all platforms.\n- Organization administrators receive a list of only active platforms.\n- Can be filtered by category_id.\n\nRequires authentication and global administrator or organization\nadministrator role.",
                "operationId": "get_all_platforms_engine__v__platforms_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Category Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlatformResponse"
                                    },
                                    "title": "Response Get All Platforms Engine  V  Platforms Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/platforms/{platform_id}": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Platforms"
                ],
                "summary": "Get Platform",
                "description": "Retrieve a specific platform by ID.\n\nRequires authentication and global administrator or organization\nadministrator role.",
                "operationId": "get_platform_engine__v__platforms__platform_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "platform_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Platform Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Data Engine",
                    "Platforms"
                ],
                "summary": "Update Platform",
                "description": "Update an existing platform's details.\n\nAllows partial updates to a platform's name, description, category, and active status.\nAll fields are optional. Only provided fields will be updated.\nPlatform names must remain unique.\n\nRequires authentication and global administrator role.",
                "operationId": "update_platform_engine__v__platforms__platform_id__patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "platform_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Platform Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlatformUpdate"
                            },
                            "examples": {
                                "basic": {
                                    "summary": "Basic Platform Update",
                                    "description": "Update a platform with minimal fields",
                                    "value": {
                                        "name": "Updated Platform Name",
                                        "description": "Updated Platform Description",
                                        "is_active": true
                                    }
                                },
                                "update_category": {
                                    "summary": "Update Platform Category",
                                    "description": "Update a platform's category",
                                    "value": {
                                        "name": "Platform Name",
                                        "description": "Platform Description",
                                        "is_active": true,
                                        "category_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                                    }
                                },
                                "deactivate": {
                                    "summary": "Deactivate Platform",
                                    "description": "Update a platform to inactive state",
                                    "value": {
                                        "name": "Platform Name",
                                        "description": "Platform Description",
                                        "is_active": false
                                    }
                                },
                                "partial_update": {
                                    "summary": "Partial Platform Update",
                                    "description": "Update only specific fields of a platform",
                                    "value": {
                                        "name": "Updated Platform Name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/platforms/by-category/{category_id}": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Platforms"
                ],
                "summary": "Get Platforms By Category",
                "description": "Retrieve all platforms assigned to a specific category.\n\n- Global administrators receive a list of all platforms in the category.\n- Organization administrators receive a list of only active platforms in the category.\n\nRequires authentication and global administrator or organization\nadministrator role.",
                "operationId": "get_platforms_by_category_engine__v__platforms_by_category__category_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Category Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlatformResponse"
                                    },
                                    "title": "Response Get Platforms By Category Engine  V  Platforms By Category  Category Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/licensing-audit/configurations/{licensing_id}/audit-logs": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Licensing Audit"
                ],
                "summary": "Get audit logs for a licensing configuration",
                "description": "Retrieves a paginated list of audit logs that track changes made to a licensing configuration.\n    Each log entry contains information about what was changed, who made the change, and when it was changed.\n    \n    The audit logs track all modifications to licensing settings including:\n    - Configuration creation\n    - Field updates (text preview length, audio preview length, etc.)\n    - Platform mappings changes\n    - License terms acceptance\n    - Configuration deletion\n    \n    Results are ordered with the most recent changes first.",
                "operationId": "get_configuration_audit_logs_engine__v__licensing_audit_configurations__licensing_id__audit_logs_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "licensing_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Licensing Id"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum number of records to return (1-100)",
                            "default": 50,
                            "title": "Limit"
                        },
                        "description": "Maximum number of records to return (1-100)"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip for pagination",
                            "default": 0,
                            "title": "Offset"
                        },
                        "description": "Number of records to skip for pagination"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of audit logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicensingAuditListResponse"
                                },
                                "example": {
                                    "audit_logs": [
                                        {
                                            "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                            "licensing_id": "3fa85f64-5717-4562-b3fc-2c963f66afa7",
                                            "user_id": "user@example.com",
                                            "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa8",
                                            "publisher_id": "3fa85f64-5717-4562-b3fc-2c963f66afa9",
                                            "action": "update",
                                            "previous_values": {
                                                "cp_text_preview_length": 250
                                            },
                                            "new_values": {
                                                "cp_text_preview_length": 500
                                            },
                                            "modified_fields": [
                                                "cp_text_preview_length"
                                            ],
                                            "change_details": "Updated text preview length",
                                            "created_at": "2025-03-01T12:00:00Z"
                                        }
                                    ],
                                    "total": 5
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Licensing configuration not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Licensing configuration not found"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "You are not authorized to perform this action"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/organization-invites": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Organization Invites",
                    "Organization Invites"
                ],
                "summary": "Get Invites",
                "description": "Get organization invites for the currently logged in user.\nOptionally filter by status.\n\nThis endpoint:\n1. Retrieves all invites sent to the authenticated user's email\n2. Can filter invites by status (pending, accepted, etc.)\n3. For pending invites, automatically filters out expired ones\n4. Updates expired pending invites to have status 'expired'\n5. Includes the inviter's email in the response\n6. Includes the organization name in the response\n7. Requires user authentication",
                "operationId": "get_invites_engine__v__organization_invites_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter invites by status (e.g., 'pending', 'accepted')",
                            "title": "Status"
                        },
                        "description": "Filter invites by status (e.g., 'pending', 'accepted')"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationInviteResponse"
                                    },
                                    "title": "Response Get Invites Engine  V  Organization Invites Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Data Engine",
                    "Organization Invites",
                    "Organization Invites"
                ],
                "summary": "Create Invite",
                "description": "Create a new organization invite.\nRequires either organization admin or global admin permissions.\n\nThis endpoint:\n1. Verifies the user has admin permissions for the organization\n2. Validates the role exists and is valid\n3. Checks if the user is already a member or has a pending invite\n4. Creates a new invite with expiration date\n5. Sends an email notification to the invited user\n6. Requires organization admin or global admin permissions",
                "operationId": "create_invite_engine__v__organization_invites_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrganizationInviteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationInviteResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/organization-invites/{invite_id}/accept": {
            "post": {
                "tags": [
                    "Data Engine",
                    "Organization Invites",
                    "Organization Invites"
                ],
                "summary": "Accept Invite",
                "description": "Accept an organization invite and add user to organization.\n\nThis endpoint:\n1. Validates the invite exists and belongs to the authenticated user\n2. Checks if the invite is still pending and not expired\n3. Updates the invite status to 'accepted'\n4. Creates a new organization user record with the role from the invite\n5. Requires user authentication",
                "operationId": "accept_invite_engine__v__organization_invites__invite_id__accept_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "invite_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Invite Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationInviteResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/organization-invites/organization/{organization_id}": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Organization Invites",
                    "Organization Invites"
                ],
                "summary": "Get Organization Invites",
                "description": "Get all organization invites for a specific organization.\nRequires either organization admin or global admin permissions.\nOptionally filter by status.\n\nThis endpoint:\n1. Retrieves all invites for a specific organization\n2. Can filter invites by status\n3. Includes the inviter's email in the response\n4. Requires organization admin or global admin permissions",
                "operationId": "get_organization_invites_engine__v__organization_invites_organization__organization_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter invites by status (e.g., 'pending', 'accepted')",
                            "title": "Status"
                        },
                        "description": "Filter invites by status (e.g., 'pending', 'accepted')"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationInviteResponse"
                                    },
                                    "title": "Response Get Organization Invites Engine  V  Organization Invites Organization  Organization Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/organization-users": {
            "get": {
                "tags": [
                    "Data Engine",
                    "Organization Users",
                    "Organization Users"
                ],
                "summary": "Get organization users list",
                "description": "Retrieve a list of users for a specific organization.\n    \n    - Requires organization_id parameter\n    - Returns all users associated with the organization\n    - Requires organization admin permissions",
                "operationId": "get_organization_users_engine__v__organization_users_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/app__routers__organization_users__UserResponse"
                                    },
                                    "title": "Response Get Organization Users Engine  V  Organization Users Get"
                                },
                                "example": [
                                    {
                                        "name": "John Doe",
                                        "email": "john@example.com",
                                        "role": "admin"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - organization_id is required",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "organization_id is required"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have organization admin permissions",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Access denied"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/license-versions": {
            "get": {
                "tags": [
                    "Data Engine",
                    "License Versions"
                ],
                "summary": "Get All License Versions",
                "description": "Retrieve all license versions.\n\nOptionally filter to only include active license versions.\nRequires global administrator role.",
                "operationId": "get_all_license_versions_engine__v__license_versions_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "active_only",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Filter to only include active license versions",
                            "default": false,
                            "title": "Active Only"
                        },
                        "description": "Filter to only include active license versions"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LicenseVersionResponse"
                                    },
                                    "title": "Response Get All License Versions Engine  V  License Versions Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Data Engine",
                    "License Versions"
                ],
                "summary": "Create License Version",
                "description": "Create a new license version.\n\nRequires global administrator role.",
                "operationId": "create_license_version_engine__v__license_versions_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseVersionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseVersionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engine/{v}/license-versions/latest": {
            "get": {
                "tags": [
                    "Data Engine",
                    "License Versions"
                ],
                "summary": "Get Latest License Version",
                "description": "Retrieve the latest active license version.\n\nAvailable to any authenticated user regardless of role.\nReturns the license version with the highest version_number that is marked as active.\nIf no active license versions exist, returns 204 No Content.",
                "operationId": "get_latest_license_version_engine__v__license_versions_latest_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/LicenseVersionResponse"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Get Latest License Version Engine  V  License Versions Latest Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/engine/{v}/license-versions/{license_version_id}": {
            "get": {
                "tags": [
                    "Data Engine",
                    "License Versions"
                ],
                "summary": "Get License Version",
                "description": "Retrieve a specific license version by ID.\n\nRequires global administrator role.",
                "operationId": "get_license_version_engine__v__license_versions__license_version_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "license_version_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "License Version Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseVersionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Data Engine",
                    "License Versions"
                ],
                "summary": "Update License Version",
                "description": "Update an existing license version.\n\nRequires global administrator role.",
                "operationId": "update_license_version_engine__v__license_versions__license_version_id__patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "license_version_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "License Version Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseVersionUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseVersionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Data Engine",
                    "License Versions"
                ],
                "summary": "Delete License Version",
                "description": "Delete a license version.\n\nCannot delete a version that is associated with any licensing configurations.\nRequires global administrator role.",
                "operationId": "delete_license_version_engine__v__license_versions__license_version_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "license_version_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "License Version Id"
                        }
                    },
                    {
                        "name": "cascade",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Cascade delete all mappings associated with this license version",
                            "default": false,
                            "title": "Cascade"
                        },
                        "description": "Cascade delete all mappings associated with this license version"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/document/": {
            "post": {
                "summary": "Upload Document To Weaviate",
                "operationId": "upload_document_to_weaviate_document__post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/documents/": {
            "post": {
                "summary": "Unzip And Upload Documents To Weaviate",
                "operationId": "unzip_and_upload_documents_to_weaviate_documents__post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingest/excel": {
            "post": {
                "summary": "Process Excel Data",
                "operationId": "process_excel_data_ingest_excel_post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExcelDocumentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/upload_zip_with_metadata": {
            "post": {
                "summary": "Upload Zip With Metadata",
                "operationId": "upload_zip_with_metadata_upload_zip_with_metadata_post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetadataMapModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/upload_whisper_transcripts/": {
            "post": {
                "summary": "Upload Whisper Transcripts",
                "operationId": "upload_whisper_transcripts_upload_whisper_transcripts__post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WhisperTranscriptMetadataModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/real_time_upload": {
            "post": {
                "summary": "Real Time Upload",
                "operationId": "real_time_upload_real_time_upload_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RealTimeDocumentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/status/{batch_id}": {
            "get": {
                "summary": "Get Status",
                "operationId": "get_status_status__batch_id__get",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "batch_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "Batch Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingest": {
            "post": {
                "summary": "Ingest File Or Zip",
                "operationId": "ingest_file_or_zip_ingest_post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IngestionDocumentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadStatusModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media": {
            "post": {
                "summary": "Ingest Audio Video Articles",
                "operationId": "ingest_audio_video_articles_media_post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MediaDocumentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/whisper-callback": {
            "post": {
                "summary": "Whisper Callback",
                "operationId": "whisper_callback_whisper_callback_post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TranscribedItemDetails"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "post": {
                "summary": "Create User",
                "operationId": "create_user_api_users_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{auth_id}": {
            "get": {
                "summary": "Get User",
                "operationId": "get_user_api_users__auth_id__get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "auth_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Auth Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserWithOrganizationsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ingested-data/upload-url": {
            "post": {
                "summary": "Create Presigned Upload Url",
                "operationId": "create_presigned_upload_url_api_ingested_data_upload_url_post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PresignedUrlRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PresignedUrlResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ingested-data/uploads": {
            "get": {
                "summary": "List Uploaded Files",
                "operationId": "list_uploaded_files_api_ingested_data_uploads_get",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "folder_paths",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Folder Paths"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ingested-data": {
            "post": {
                "summary": "Create Ingested Data",
                "operationId": "create_ingested_data_api_ingested_data_post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesInsertRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileInsertResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ingested-data/items": {
            "get": {
                "summary": "Get Ingested Data By Ids",
                "operationId": "get_ingested_data_by_ids_api_ingested_data_items_get",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "item_ids",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IngestedDataItem"
                                    },
                                    "title": "Response Get Ingested Data By Ids Api Ingested Data Items Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ingested-data/query": {
            "post": {
                "summary": "Query Ingested Data",
                "operationId": "query_ingested_data_api_ingested_data_query_post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetIngestedDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestedDataResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/publishers": {
            "get": {
                "summary": "Get publishers list",
                "description": "Retrieve a list of publishers based on user role and permissions.\n    \n    - Global Admin\n        - Can view all publishers\n        - Can filter by organization ID\n    \n    - Organization Admin\n        - Can only view publishers within their organization\n        - Cannot access publishers from other organizations\n    \n    - Other Roles\n        - No access to this endpoint",
                "operationId": "get_publishers_api_publishers_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of publishers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PublisherResponse"
                                    },
                                    "title": "Response Get Publishers Api Publishers Get"
                                },
                                "example": [
                                    {
                                        "id": "123e4567-e89b-12d3-a456-426614174000",
                                        "name": "Publisher Name",
                                        "organization_id": "123e4567-e89b-12d3-a456-426614174001",
                                        "publisher_logo": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_logo.png",
                                        "publisher_fav": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_favicon.png",
                                        "publisher_bw": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_bw.svg",
                                        "publisher_url": "https://example.com",
                                        "publisher_hierarchy": "Parent Publisher",
                                        "publisher_hierarchy_logo": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/parent_logo.png",
                                        "publisher_hierarchy_fav": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/parent_favicon.png",
                                        "publisher_hierarchy_bw": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/parent_bw.svg",
                                        "publisher_hierarchy_url": "https://parent.example.com",
                                        "drm": [
                                            "Type1",
                                            "Type2"
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Forbidden"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new publisher",
                "description": "Creates a new publisher with optional image assets and organization assignment.\n    \n    **Permission Requirements:**\n    - Global Admin: Can create publishers for any organization, or create a new organization\n    - Organization Admin: Can only create publishers for their own organization\n    \n    **Organization Handling:**\n    - If organization_id is provided: Uses the specified organization (permission check applied)\n    - If no organization_id is provided:\n      - For Global Admins: Creates a new organization with the same name as the publisher\n      - For Org Admins: Uses their current organization\n    \n    **S3 Directory Creation:**\n    This endpoint automatically creates S3 directories for the new publisher with the structure:\n    - {publisher_name}/\n      - audio/\n        - metadata/\n      - video/\n        - metadata/\n      - books/\n        - metadata/\n      - articles/\n        - metadata/",
                "operationId": "create_publishers_api_publishers_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublisherCreateRequest",
                                "examples": {
                                    "basic": {
                                        "summary": "Basic Publisher",
                                        "description": "Create a basic publisher with name only",
                                        "value": {
                                            "name": "Example Publisher"
                                        }
                                    },
                                    "with_org": {
                                        "summary": "Publisher with Organization",
                                        "description": "Create a publisher and assign to existing organization",
                                        "value": {
                                            "name": "Example Publisher",
                                            "organization_id": "123e4567-e89b-12d3-a456-426614174001"
                                        }
                                    },
                                    "complete": {
                                        "summary": "Complete Publisher",
                                        "description": "Create a publisher with all available fields",
                                        "value": {
                                            "name": "Example Publisher",
                                            "organization_id": "123e4567-e89b-12d3-a456-426614174001",
                                            "publisher_logo": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_logo.png",
                                            "publisher_fav": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_favicon.png",
                                            "publisher_bw": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_bw.svg",
                                            "publisher_url": "https://example.com",
                                            "drm": [
                                                "Type1",
                                                "Type2"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Publisher created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublisherResponse"
                                },
                                "example": {
                                    "id": "123e4567-e89b-12d3-a456-426614174000",
                                    "name": "Example Publisher",
                                    "organization_id": "123e4567-e89b-12d3-a456-426614174001",
                                    "publisher_logo": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_logo.png",
                                    "publisher_fav": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_favicon.png",
                                    "publisher_bw": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/example_bw.svg"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid data",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Invalid request data"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Forbidden: You can only create publishers for your own organization"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "An error occurred while creating the publisher"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/publishers/{publisher_id}": {
            "get": {
                "summary": "Get Publisher",
                "operationId": "get_publisher_api_publishers__publisher_id__get",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Publisher Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublisherResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update publisher details",
                "description": "Update an existing publisher's information.\n    \n    **Permission Requirements:**\n    - Global Admin: Can update any publisher\n    - Organization Admin: Can only update publishers within their organization\n    \n    Fields that can be updated:\n    - publisher_logo\n    - publisher_fav\n    - publisher_bw\n    - publisher_url\n    - publisher_hierarchy\n    - publisher_hierarchy_logo\n    - publisher_hierarchy_fav\n    - publisher_hierarchy_bw\n    - publisher_hierarchy_url\n    - drm\n    \n    Note: Publisher name cannot be modified after creation.",
                "operationId": "update_publisher_api_publishers__publisher_id__patch",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Publisher Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublisherCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Publisher updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublisherResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Publisher not found"
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/publishers/presigned-url": {
            "post": {
                "summary": "Generate presigned URL for publisher image upload",
                "description": "Generates a presigned URL to upload publisher images directly to S3.\n    \n    This endpoint provides:\n    - A presigned URL for direct browser-to-S3 upload\n    - The final URL where the image will be accessible after upload\n    - S3 bucket and key information\n    \n    Supported image types:\n    - PNG files (image/png)\n    - SVG files (image/svg+xml)\n    \n    The presigned URL expires after 1 hour.",
                "operationId": "get_presigned_url_api_publishers_presigned_url_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PresignedUrlRequest",
                                "examples": {
                                    "png_example": {
                                        "summary": "PNG Logo Upload",
                                        "description": "Request for uploading a PNG logo file",
                                        "value": {
                                            "fileName": "publisher_logo.png",
                                            "fileType": "image/png",
                                            "uploadType": "normal"
                                        }
                                    },
                                    "svg_example": {
                                        "summary": "SVG Logo Upload",
                                        "description": "Request for uploading an SVG logo file",
                                        "value": {
                                            "fileName": "publisher_logo.svg",
                                            "fileType": "image/svg+xml",
                                            "uploadType": "normal"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully generated presigned URL",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Presigned Url Api Publishers Presigned Url Post"
                                },
                                "example": {
                                    "presigned_url": "https://dapologeticsimages.s3.amazonaws.com/logos/publisher_logo.png?AWSAccessKeyId=XXXX&Signature=YYYY&Expires=1234567890",
                                    "file_url": "https://dapologeticsimages.s3.us-east-1.amazonaws.com/logos/publisher_logo.png",
                                    "key": "logos/publisher_logo.png",
                                    "bucket": "dapologeticsimages"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Invalid file type. Supported types: image/png, image/svg+xml"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Forbidden"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Failed to generate upload URL"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/organizations": {
            "get": {
                "summary": "Get Organizations",
                "operationId": "get_organizations_api_organizations_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationCollectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Organization",
                "operationId": "create_organization_api_organizations_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/organizations/{organization_id}": {
            "put": {
                "summary": "Update Organization",
                "operationId": "update_organization_api_organizations__organization_id__put",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/organizations/{organization_id}/activate": {
            "post": {
                "summary": "Activate Organization",
                "description": "Activate an organization by setting its is_active flag to true.\nThis endpoint only updates the organization's active status.",
                "operationId": "activate_organization_api_organizations__organization_id__activate_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/statistics/summary/organizations": {
            "get": {
                "summary": "Get organization statistics summary",
                "description": "Returns organization statistics in a hierarchical format.\n    \n    Role-based access:\n    \n    - Global Admin: Complete view of organizations with activity metrics\n    - Other roles: Not authorized to access statistics\n    \n    The response structure depends on the authenticated user's role.",
                "operationId": "get_organization_summary_api_statistics_summary_organizations_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "activity_period_start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Start date for the activity period (inclusive)",
                            "title": "Activity Period Start Date"
                        },
                        "description": "Start date for the activity period (inclusive)"
                    },
                    {
                        "name": "activity_period_end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "End date for the activity period (inclusive)",
                            "title": "Activity Period End Date"
                        },
                        "description": "End date for the activity period (inclusive)"
                    },
                    {
                        "name": "activity_threshold",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Minimum number of items required for an entity to be considered 'active' in the specified period",
                            "default": 1,
                            "title": "Activity Threshold"
                        },
                        "description": "Minimum number of items required for an entity to be considered 'active' in the specified period",
                        "example": 5
                    },
                    {
                        "name": "seven_days_threshold",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Minimum number of items for an entity to be considered active in the 7-day activity report",
                            "default": 1,
                            "title": "Seven Days Threshold"
                        },
                        "description": "Minimum number of items for an entity to be considered active in the 7-day activity report",
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with organization statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Organization Summary Api Statistics Summary Organizations Get"
                                },
                                "examples": {
                                    "global_admin": {
                                        "summary": "Global Admin Statistics",
                                        "description": "Complete statistics for all organizations",
                                        "value": {
                                            "organizations": {
                                                "total": {
                                                    "count": 32,
                                                    "change": 2
                                                },
                                                "status": {
                                                    "active": {
                                                        "count": 13,
                                                        "change": 1
                                                    },
                                                    "inactive": {
                                                        "count": 19,
                                                        "change": -1
                                                    }
                                                }
                                            },
                                            "7_days_activity": {
                                                "organizations": {
                                                    "total_change": 2,
                                                    "active_change": 1,
                                                    "inactive_change": -1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "User is not authorized to access statistics",
                                    "code": "UNAUTHORIZED",
                                    "error": "User is not authorized to access statistics"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Failed to generate organization statistics"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/statistics/summary/publishers": {
            "get": {
                "summary": "Get publisher statistics summary",
                "description": "Returns publisher statistics in a hierarchical format.\n    \n    Role-based access:\n    \n    - Global Admin: Complete view of all publishers with activity metrics\n    - Organization Admin: Limited view of publishers within their organization\n    - Other roles: Not authorized to access statistics\n    \n    The response structure depends on the authenticated user's role.",
                "operationId": "get_publisher_summary_api_statistics_summary_publishers_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "activity_period_start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Start date for the activity period (inclusive)",
                            "title": "Activity Period Start Date"
                        },
                        "description": "Start date for the activity period (inclusive)"
                    },
                    {
                        "name": "activity_period_end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "End date for the activity period (inclusive)",
                            "title": "Activity Period End Date"
                        },
                        "description": "End date for the activity period (inclusive)"
                    },
                    {
                        "name": "activity_threshold",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Minimum number of items required for an entity to be considered 'active' in the specified period",
                            "default": 1,
                            "title": "Activity Threshold"
                        },
                        "description": "Minimum number of items required for an entity to be considered 'active' in the specified period",
                        "example": 5
                    },
                    {
                        "name": "seven_days_threshold",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Minimum number of items for an entity to be considered active in the 7-day activity report",
                            "default": 1,
                            "title": "Seven Days Threshold"
                        },
                        "description": "Minimum number of items for an entity to be considered active in the 7-day activity report",
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with publisher statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Publisher Summary Api Statistics Summary Publishers Get"
                                },
                                "examples": {
                                    "global_admin": {
                                        "summary": "Global Admin Publisher Statistics",
                                        "description": "Complete statistics for all publishers",
                                        "value": {
                                            "publishers": {
                                                "total": {
                                                    "count": 118,
                                                    "change": 4
                                                },
                                                "status": {
                                                    "active": {
                                                        "count": 16,
                                                        "change": 1
                                                    },
                                                    "inactive": {
                                                        "count": 102,
                                                        "change": -1
                                                    }
                                                }
                                            },
                                            "7_days_activity": {
                                                "publishers": {
                                                    "total_change": 4,
                                                    "active_change": 1,
                                                    "inactive_change": -1
                                                }
                                            }
                                        }
                                    },
                                    "org_admin": {
                                        "summary": "Organization Admin Publisher Statistics",
                                        "description": "Statistics for publishers within a specific organization",
                                        "value": {
                                            "publishers": {
                                                "total": {
                                                    "count": 10,
                                                    "change": 1
                                                },
                                                "status": {
                                                    "active": {
                                                        "count": 8,
                                                        "change": 1
                                                    },
                                                    "inactive": {
                                                        "count": 2,
                                                        "change": -1
                                                    }
                                                }
                                            },
                                            "7_days_activity": {
                                                "publishers": {
                                                    "total_change": 1,
                                                    "active_change": 1,
                                                    "inactive_change": -1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "User is not authorized to access statistics",
                                    "code": "UNAUTHORIZED",
                                    "error": "User is not authorized to access statistics"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Failed to generate publisher statistics"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/statistics/summary/ingestion": {
            "post": {
                "summary": "Get ingestion statistics summary data",
                "description": "Get summary statistics for chunks and files ingested by publishers.\n    \n    Returns aggregate counts by content type for both files and chunks.\n    The counts data provides total counts and breakdowns by content type (Article, Book, Video, Podcast, Audio).\n\n    Role-Based Access:\n    - Global Admin: Can access all data or filter by specific publishers\n    - Organization Admin: Can only access data for publishers within their organization\n    - Publisher: Can only access data for the publishers they have ingested",
                "operationId": "get_ingestion_summary_api_statistics_summary_ingestion_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IngestionSummaryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with summary data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionSummaryResponse-Input"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access or invalid role",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": {
                                        "message": "User is not authorized to access statistics",
                                        "code": "UNAUTHORIZED",
                                        "error": "User is not authorized to access statistics"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - invalid publisher ID for organization admin",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "One or more publisher IDs are not valid for this organization"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/statistics/timeseries/organizations": {
            "get": {
                "summary": "Get Organization Timeseries",
                "description": "Retrieve timeseries data for active/inactive organizations.\n\nParameters:\n- start_date: Start date for the time range (default: 30 days ago)\n- end_date: End date for the time range (default: today)\n\nReturns:\n- active_organizations: Array of [timestamp, count] pairs showing active organizations per day\n- inactive_organizations: Array of [timestamp, count] pairs showing inactive organizations per day\n- total_organizations: Array of [timestamp, count] pairs showing total organizations per day",
                "operationId": "get_organization_timeseries_api_statistics_timeseries_organizations_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Start date for the time range (format: YYYY-MM-DD)",
                            "title": "Start Date"
                        },
                        "description": "Start date for the time range (format: YYYY-MM-DD)"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "End date for the time range (format: YYYY-MM-DD)",
                            "title": "End Date"
                        },
                        "description": "End date for the time range (format: YYYY-MM-DD)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Organization Timeseries Api Statistics Timeseries Organizations Get"
                                },
                                "example": {
                                    "active_organizations": [
                                        [
                                            1646092800000,
                                            5
                                        ],
                                        [
                                            1646179200000,
                                            7
                                        ],
                                        [
                                            1646265600000,
                                            6
                                        ]
                                    ],
                                    "inactive_organizations": [
                                        [
                                            1646092800000,
                                            10
                                        ],
                                        [
                                            1646179200000,
                                            8
                                        ],
                                        [
                                            1646265600000,
                                            9
                                        ]
                                    ],
                                    "total_organizations": [
                                        [
                                            1646092800000,
                                            15
                                        ],
                                        [
                                            1646179200000,
                                            15
                                        ],
                                        [
                                            1646265600000,
                                            15
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": {
                                        "message": "User is not authorized to access statistics",
                                        "code": "UNAUTHORIZED",
                                        "error": "User is not authorized to access statistics"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Not authenticated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/statistics/timeseries/publishers": {
            "get": {
                "summary": "Get Publisher Timeseries",
                "description": "Retrieve timeseries data for active/inactive publishers.\n\nParameters:\n- start_date: Start date for the time range (default: 30 days ago)\n- end_date: End date for the time range (default: today)\n\nReturns:\n- active_publishers: Array of [timestamp, count] pairs showing active publishers per day\n- inactive_publishers: Array of [timestamp, count] pairs showing inactive publishers per day\n- total_publishers: Array of [timestamp, count] pairs showing total publishers per day",
                "operationId": "get_publisher_timeseries_api_statistics_timeseries_publishers_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Start date for the time range (format: YYYY-MM-DD)",
                            "title": "Start Date"
                        },
                        "description": "Start date for the time range (format: YYYY-MM-DD)"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "End date for the time range (format: YYYY-MM-DD)",
                            "title": "End Date"
                        },
                        "description": "End date for the time range (format: YYYY-MM-DD)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Publisher Timeseries Api Statistics Timeseries Publishers Get"
                                },
                                "example": {
                                    "active_publishers": [
                                        [
                                            1646092800000,
                                            12
                                        ],
                                        [
                                            1646179200000,
                                            15
                                        ],
                                        [
                                            1646265600000,
                                            14
                                        ]
                                    ],
                                    "inactive_publishers": [
                                        [
                                            1646092800000,
                                            8
                                        ],
                                        [
                                            1646179200000,
                                            5
                                        ],
                                        [
                                            1646265600000,
                                            6
                                        ]
                                    ],
                                    "total_publishers": [
                                        [
                                            1646092800000,
                                            20
                                        ],
                                        [
                                            1646179200000,
                                            20
                                        ],
                                        [
                                            1646265600000,
                                            20
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": {
                                        "message": "User is not authorized to access statistics",
                                        "code": "FORBIDDEN",
                                        "error": "User is not authorized to access statistics"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/statistics/timeseries/ingestion": {
            "post": {
                "summary": "Get ingestion statistics timeseries data",
                "description": "Get ingestion timeseries statistics for chunks and files ingested by publishers.\n    \n    Returns timeseries data for file and chunk counts over time.\n    \n    The timeseries data consists of arrays of [timestamp, count] pairs for both files and chunks.\n\n    Role-Based Access:\n    - Global Admin: Can access all data or filter by specific publishers\n    - Organization Admin: Can only access data for publishers within their organization\n    - Publisher: Can only access data for the publishers they have ingested",
                "operationId": "get_ingestion_timeseries_api_statistics_timeseries_ingestion_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IngestionTimeseriesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with timeseries data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionTimeseriesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access or invalid role",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": {
                                        "message": "User is not authorized to access statistics",
                                        "code": "UNAUTHORIZED",
                                        "error": "User is not authorized to access statistics"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - invalid publisher ID for organization admin",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "One or more publisher IDs are not valid for this organization"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/organizations/{organization_id}/components": {
            "get": {
                "summary": "List Component Configs",
                "description": "List all component configs for an organization.",
                "operationId": "list_component_configs_api_organizations__organization_id__components_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ComponentConfigResponse"
                                    },
                                    "title": "Response List Component Configs Api Organizations  Organization Id  Components Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Component Config",
                "description": "Create a new component config.",
                "operationId": "create_component_config_api_organizations__organization_id__components_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ComponentConfigCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComponentConfigResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/organizations/{organization_id}/components/{slug_id}": {
            "put": {
                "summary": "Update Component Config",
                "description": "Update a component config.",
                "operationId": "update_component_config_api_organizations__organization_id__components__slug_id__put",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "slug_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Slug Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ComponentConfigUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComponentConfigResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Component Config",
                "description": "Delete a component config.",
                "operationId": "delete_component_config_api_organizations__organization_id__components__slug_id__delete",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "slug_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Slug Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/components/{slug_id}": {
            "get": {
                "summary": "Get Component Config By Slug",
                "description": "Get a component config by slug.",
                "operationId": "get_component_config_by_slug_api_components__slug_id__get",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "slug_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Slug Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComponentConfigSlugResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/items/{item_id}/enrichment": {
            "get": {
                "summary": "Get Enrichment",
                "description": "Get the enrichment data for an item",
                "operationId": "get_enrichment_api_items__item_id__enrichment_get",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "item_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Enrichment Field",
                "description": "Update a specific field in the enrichment data",
                "operationId": "update_enrichment_field_api_items__item_id__enrichment_patch",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "item_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Item Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnrichmentUpdateModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/credentials": {
            "post": {
                "summary": "Create User Key",
                "description": "Create a new API key, optionally associated with an organization.\nThis endpoint allows users to create personal API keys or organization keys.\nIf organization_id is \"Personal Credentials\", creates a personal credential with no organization association.",
                "operationId": "create_user_key_api_credentials_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "description": "Optional organization ID to associate with the key",
                                "title": "Organization Id"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Credentials",
                "description": "Get API keys, either for an organization or Personal Credentials for the current user.\nIf organization_id is provided, returns keys for that organization.\nIf not, returns Personal Credentials for the current user.\nSpecial case: If organization_id is \"Personal Credentials\" and user is an admin, returns all Personal Credentials.",
                "operationId": "get_credentials_api_credentials_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Optional organization ID to filter keys",
                            "title": "Organization Id"
                        },
                        "description": "Optional organization ID to filter keys"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/credentials/{credential_id}": {
            "delete": {
                "summary": "Delete Credential",
                "description": "Delete an API credential, either a personal credential or an organization credential.\nIf organization_id is provided and not \"Personal Credentials\", validates organization access.\nIf organization_id is \"Personal Credentials\", validates that the credential belongs to the current user.\nIf no organization_id is provided, assumes it's a personal credential.\nOrganization admins can delete any credential within their organization.\nAdmin users can delete any credential.",
                "operationId": "delete_credential_api_credentials__credential_id__delete",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Credential Id"
                        }
                    },
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Optional organization ID the credential belongs to",
                            "title": "Organization Id"
                        },
                        "description": "Optional organization ID the credential belongs to"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/licensing/configurations": {
            "get": {
                "summary": "Get All Licensing Configurations",
                "description": "Retrieve all licensing configurations across all organizations.\nRequires global administrator role.",
                "operationId": "get_all_licensing_configurations_api_licensing_configurations_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ContentProtectionResponse"
                                    },
                                    "type": "array",
                                    "title": "Response Get All Licensing Configurations Api Licensing Configurations Get"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/licensing/organizations/{organization_id}/configurations": {
            "get": {
                "summary": "Get Organization Licensing Configuration",
                "description": "Get organization-level licensing configuration.",
                "operationId": "get_organization_licensing_configuration_api_licensing_organizations__organization_id__configurations_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentProtectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Organization Licensing Configuration",
                "description": "Create organization-level licensing configuration.\nValidates that all license versions have been accepted before creating.",
                "operationId": "create_organization_licensing_configuration_api_licensing_organizations__organization_id__configurations_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentProtectionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentProtectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/licensing/organizations/{organization_id}/configurations/{licensing_id}": {
            "patch": {
                "summary": "Update Organization Licensing Configuration",
                "description": "Update organization-level licensing configuration.",
                "operationId": "update_organization_licensing_configuration_api_licensing_organizations__organization_id__configurations__licensing_id__patch",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "licensing_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Licensing Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentProtectionPatch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentProtectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/licensing/publishers/{publisher_id}/configurations": {
            "get": {
                "summary": "Get Publisher Licensing Configuration",
                "description": "Get publisher-specific licensing configuration.\nFalls back to organization settings if no publisher-specific config exists.",
                "operationId": "get_publisher_licensing_configuration_api_licensing_publishers__publisher_id__configurations_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Publisher Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentProtectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Publisher Licensing Configuration",
                "description": "Create publisher-specific licensing configuration.\nValidates that all license versions have been accepted before creating.",
                "operationId": "create_publisher_licensing_configuration_api_licensing_publishers__publisher_id__configurations_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Publisher Id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentProtectionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentProtectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/licensing/publishers/{publisher_id}/configurations/{licensing_id}": {
            "patch": {
                "summary": "Update Publisher Licensing Configuration",
                "description": "Update publisher-specific licensing configuration.",
                "operationId": "update_publisher_licensing_configuration_api_licensing_publishers__publisher_id__configurations__licensing_id__patch",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Publisher Id"
                        }
                    },
                    {
                        "name": "licensing_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Licensing Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentProtectionPatch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentProtectionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Publisher Licensing Configuration",
                "description": "Delete publisher-specific licensing configuration.\n\nThis will cause the publisher to fall back to organization-level settings.\nOnly publisher-specific configurations can be deleted, not organization-level ones.",
                "operationId": "delete_publisher_licensing_configuration_api_licensing_publishers__publisher_id__configurations__licensing_id__delete",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Publisher Id"
                        }
                    },
                    {
                        "name": "licensing_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Licensing Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/licensing/organizations/{organization_id}/license-versions/{license_version_id}/accept": {
            "post": {
                "summary": "Accept License Version By Organization",
                "description": "Accept a specific license version for an organization.\n\nFinds the organization's licensing configuration and marks the specified license version\nas accepted. Creates the mapping if it doesn't exist.\n\nIf the license version has already been accepted, returns a 200 OK with the mapping.",
                "operationId": "accept_license_version_by_organization_api_licensing_organizations__organization_id__license_versions__license_version_id__accept_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    },
                    {
                        "name": "license_version_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "License Version Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseVersionMappingResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/licensing/publishers/{publisher_id}/license-versions/{license_version_id}/accept": {
            "post": {
                "summary": "Accept License Version By Publisher",
                "description": "Accept a specific license version for a publisher.\n\nFinds the publisher's licensing configuration and marks the specified license version\nas accepted. Creates the mapping if it doesn't exist.\n\nIf the license version has already been accepted, returns a 200 OK with the mapping.",
                "operationId": "accept_license_version_by_publisher_api_licensing_publishers__publisher_id__license_versions__license_version_id__accept_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Publisher Id"
                        }
                    },
                    {
                        "name": "license_version_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "License Version Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseVersionMappingResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/licensing/organizations/{organization_id}/license-versions/latest-unaccepted": {
            "get": {
                "summary": "Get Latest Unaccepted License Version By Organization",
                "description": "Get the latest unaccepted license version for an organization.\n\nReturns the most recent license version that hasn't been accepted yet by the organization.\nIf all license versions have been accepted, returns 204 No Content.",
                "operationId": "get_latest_unaccepted_license_version_by_organization_api_licensing_organizations__organization_id__license_versions_latest_unaccepted_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Organization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/LicenseVersionResponse"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Get Latest Unaccepted License Version By Organization Api Licensing Organizations  Organization Id  License Versions Latest Unaccepted Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/licensing/publishers/{publisher_id}/license-versions/latest-unaccepted": {
            "get": {
                "summary": "Get Latest Unaccepted License Version By Publisher",
                "description": "Get the latest unaccepted license version for a publisher.\n\nReturns the most recent license version that hasn't been accepted yet by the publisher.\nIf all license versions have been accepted, returns 204 No Content.",
                "operationId": "get_latest_unaccepted_license_version_by_publisher_api_licensing_publishers__publisher_id__license_versions_latest_unaccepted_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Publisher Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/LicenseVersionResponse"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Get Latest Unaccepted License Version By Publisher Api Licensing Publishers  Publisher Id  License Versions Latest Unaccepted Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/platforms/categories": {
            "get": {
                "summary": "Get All Platform Categories",
                "description": "Retrieve all platform categories.\n\nRequires authentication and global administrator or organization\nadministrator role.",
                "operationId": "get_all_platform_categories_api_platforms_categories_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PlatformCategoryResponse"
                                    },
                                    "type": "array",
                                    "title": "Response Get All Platform Categories Api Platforms Categories Get"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "post": {
                "summary": "Create Platform Category",
                "description": "Create a new platform category.\n\nCreates a category for grouping platforms together. Category names must be unique.\n\nRequires authentication and global administrator role.",
                "operationId": "create_platform_category_api_platforms_categories_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlatformCategoryCreate"
                            },
                            "examples": {
                                "basic": {
                                    "summary": "Basic Category Creation",
                                    "description": "Create a basic platform category with minimal required fields",
                                    "value": {
                                        "name": "Social Media",
                                        "description": "Platforms for social media sharing",
                                        "is_active": true
                                    }
                                },
                                "inactive": {
                                    "summary": "Inactive Category Creation",
                                    "description": "Create a category that starts in inactive state",
                                    "value": {
                                        "name": "Legacy Platforms",
                                        "description": "Old platforms being phased out",
                                        "is_active": false
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformCategoryResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/platforms/categories/{category_id}": {
            "get": {
                "summary": "Get Platform Category",
                "description": "Retrieve a specific platform category by ID.\n\nRequires authentication and global administrator or organization\nadministrator role.",
                "operationId": "get_platform_category_api_platforms_categories__category_id__get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Category Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformCategoryResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Platform Category",
                "description": "Update an existing platform category's details.\n\nAllows partial updates to a category's name, description, and active status.\nAll fields are optional. Only provided fields will be updated.\nCategory names must remain unique.\n\nRequires authentication and global administrator role.",
                "operationId": "update_platform_category_api_platforms_categories__category_id__patch",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Category Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlatformCategoryUpdate"
                            },
                            "examples": {
                                "basic": {
                                    "summary": "Basic Category Update",
                                    "description": "Update a category with minimal fields",
                                    "value": {
                                        "name": "Updated Category Name",
                                        "description": "Updated Category Description",
                                        "is_active": true
                                    }
                                },
                                "deactivate": {
                                    "summary": "Deactivate Category",
                                    "description": "Update a category to inactive state",
                                    "value": {
                                        "is_active": false
                                    }
                                },
                                "partial_update": {
                                    "summary": "Partial Category Update",
                                    "description": "Update only specific fields of a category",
                                    "value": {
                                        "name": "Updated Category Name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformCategoryResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/platforms": {
            "post": {
                "summary": "Create Platform",
                "description": "Create a new platform.\n\nCreates a platform entity that can be used in licensing configurations.\nPlatform names must be unique.\n\nRequires authentication and global administrator role.",
                "operationId": "create_platform_api_platforms_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlatformCreate"
                            },
                            "examples": {
                                "basic": {
                                    "summary": "Basic Platform Creation",
                                    "description": "Create a basic platform with required fields",
                                    "value": {
                                        "name": "Platform Name",
                                        "description": "Platform Description",
                                        "category_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                        "is_active": true
                                    }
                                },
                                "with_detailed_info": {
                                    "summary": "Platform with Detailed Info",
                                    "description": "Create a platform with detailed information",
                                    "value": {
                                        "name": "Platform Name",
                                        "description": "Detailed platform description with specific features and capabilities",
                                        "category_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                        "is_active": true
                                    }
                                },
                                "inactive": {
                                    "summary": "Inactive Platform Creation",
                                    "description": "Create a platform that starts in inactive state",
                                    "value": {
                                        "name": "Platform Name",
                                        "description": "Platform Description",
                                        "category_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                        "is_active": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get All Platforms",
                "description": "Retrieve all platforms.\n\n- Global administrators receive a list of all platforms.\n- Organization administrators receive a list of only active platforms.\n- Can be filtered by category_id.\n\nRequires authentication and global administrator or organization\nadministrator role.",
                "operationId": "get_all_platforms_api_platforms_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Category Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlatformResponse"
                                    },
                                    "title": "Response Get All Platforms Api Platforms Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/platforms/{platform_id}": {
            "get": {
                "summary": "Get Platform",
                "description": "Retrieve a specific platform by ID.\n\nRequires authentication and global administrator or organization\nadministrator role.",
                "operationId": "get_platform_api_platforms__platform_id__get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "platform_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Platform Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Platform",
                "description": "Update an existing platform's details.\n\nAllows partial updates to a platform's name, description, category, and active status.\nAll fields are optional. Only provided fields will be updated.\nPlatform names must remain unique.\n\nRequires authentication and global administrator role.",
                "operationId": "update_platform_api_platforms__platform_id__patch",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "platform_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Platform Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlatformUpdate"
                            },
                            "examples": {
                                "basic": {
                                    "summary": "Basic Platform Update",
                                    "description": "Update a platform with minimal fields",
                                    "value": {
                                        "name": "Updated Platform Name",
                                        "description": "Updated Platform Description",
                                        "is_active": true
                                    }
                                },
                                "update_category": {
                                    "summary": "Update Platform Category",
                                    "description": "Update a platform's category",
                                    "value": {
                                        "name": "Platform Name",
                                        "description": "Platform Description",
                                        "is_active": true,
                                        "category_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                                    }
                                },
                                "deactivate": {
                                    "summary": "Deactivate Platform",
                                    "description": "Update a platform to inactive state",
                                    "value": {
                                        "name": "Platform Name",
                                        "description": "Platform Description",
                                        "is_active": false
                                    }
                                },
                                "partial_update": {
                                    "summary": "Partial Platform Update",
                                    "description": "Update only specific fields of a platform",
                                    "value": {
                                        "name": "Updated Platform Name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/platforms/by-category/{category_id}": {
            "get": {
                "summary": "Get Platforms By Category",
                "description": "Retrieve all platforms assigned to a specific category.\n\n- Global administrators receive a list of all platforms in the category.\n- Organization administrators receive a list of only active platforms in the category.\n\nRequires authentication and global administrator or organization\nadministrator role.",
                "operationId": "get_platforms_by_category_api_platforms_by_category__category_id__get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Category Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlatformResponse"
                                    },
                                    "title": "Response Get Platforms By Category Api Platforms By Category  Category Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/licensing-audit/configurations/{licensing_id}/audit-logs": {
            "get": {
                "summary": "Get audit logs for a licensing configuration",
                "description": "Retrieves a paginated list of audit logs that track changes made to a licensing configuration.\n    Each log entry contains information about what was changed, who made the change, and when it was changed.\n    \n    The audit logs track all modifications to licensing settings including:\n    - Configuration creation\n    - Field updates (text preview length, audio preview length, etc.)\n    - Platform mappings changes\n    - License terms acceptance\n    - Configuration deletion\n    \n    Results are ordered with the most recent changes first.",
                "operationId": "get_configuration_audit_logs_api_licensing_audit_configurations__licensing_id__audit_logs_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "licensing_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Licensing Id"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum number of records to return (1-100)",
                            "default": 50,
                            "title": "Limit"
                        },
                        "description": "Maximum number of records to return (1-100)"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip for pagination",
                            "default": 0,
                            "title": "Offset"
                        },
                        "description": "Number of records to skip for pagination"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of audit logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicensingAuditListResponse"
                                },
                                "example": {
                                    "audit_logs": [
                                        {
                                            "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                            "licensing_id": "3fa85f64-5717-4562-b3fc-2c963f66afa7",
                                            "user_id": "user@example.com",
                                            "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa8",
                                            "publisher_id": "3fa85f64-5717-4562-b3fc-2c963f66afa9",
                                            "action": "update",
                                            "previous_values": {
                                                "cp_text_preview_length": 250
                                            },
                                            "new_values": {
                                                "cp_text_preview_length": 500
                                            },
                                            "modified_fields": [
                                                "cp_text_preview_length"
                                            ],
                                            "change_details": "Updated text preview length",
                                            "created_at": "2025-03-01T12:00:00Z"
                                        }
                                    ],
                                    "total": 5
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Licensing configuration not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Licensing configuration not found"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "You are not authorized to perform this action"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/license-versions": {
            "get": {
                "summary": "Get All License Versions",
                "description": "Retrieve all license versions.\n\nOptionally filter to only include active license versions.\nRequires global administrator role.",
                "operationId": "get_all_license_versions_api_license_versions_get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "active_only",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Filter to only include active license versions",
                            "default": false,
                            "title": "Active Only"
                        },
                        "description": "Filter to only include active license versions"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LicenseVersionResponse"
                                    },
                                    "title": "Response Get All License Versions Api License Versions Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create License Version",
                "description": "Create a new license version.\n\nRequires global administrator role.",
                "operationId": "create_license_version_api_license_versions_post",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseVersionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseVersionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/license-versions/latest": {
            "get": {
                "summary": "Get Latest License Version",
                "description": "Retrieve the latest active license version.\n\nAvailable to any authenticated user regardless of role.\nReturns the license version with the highest version_number that is marked as active.\nIf no active license versions exist, returns 204 No Content.",
                "operationId": "get_latest_license_version_api_license_versions_latest_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/LicenseVersionResponse"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Get Latest License Version Api License Versions Latest Get"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/license-versions/{license_version_id}": {
            "get": {
                "summary": "Get License Version",
                "description": "Retrieve a specific license version by ID.\n\nRequires global administrator role.",
                "operationId": "get_license_version_api_license_versions__license_version_id__get",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "license_version_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "License Version Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseVersionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update License Version",
                "description": "Update an existing license version.\n\nRequires global administrator role.",
                "operationId": "update_license_version_api_license_versions__license_version_id__patch",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "license_version_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "License Version Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LicenseVersionUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseVersionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete License Version",
                "description": "Delete a license version.\n\nCannot delete a version that is associated with any licensing configurations.\nRequires global administrator role.",
                "operationId": "delete_license_version_api_license_versions__license_version_id__delete",
                "deprecated": true,
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "license_version_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "License Version Id"
                        }
                    },
                    {
                        "name": "cascade",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Cascade delete all mappings associated with this license version",
                            "default": false,
                            "title": "Cascade"
                        },
                        "description": "Cascade delete all mappings associated with this license version"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "summary": "Request Password Reset",
                "description": "Request a password reset code to be sent to the user's email.",
                "operationId": "request_password_reset_auth_forgot_password_post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Request Password Reset Auth Forgot Password Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/confirm-forgot-password": {
            "post": {
                "summary": "Confirm Password Reset",
                "description": "Confirm the password reset using the code sent to the user's email.",
                "operationId": "confirm_password_reset_auth_confirm_forgot_password_post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Confirm Password Reset Auth Confirm Forgot Password Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/request-confirmation-email": {
            "get": {
                "summary": "Request Confirmation Email",
                "operationId": "request_confirmation_email_auth_request_confirmation_email_get",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Request Confirmation Email Auth Request Confirmation Email Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/confirm-email": {
            "get": {
                "summary": "Confirm Email",
                "operationId": "confirm_email_auth_confirm_email_get",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Confirm Email Auth Confirm Email Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/invitations": {
            "post": {
                "summary": "Create Files",
                "operationId": "create_files_auth_invitations_post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": true,
                                "title": "Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Create Files Auth Invitations Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/routes": {
            "post": {
                "summary": "Check Route Authorization",
                "operationId": "check_route_authorization_auth_routes_post",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "v",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/APIVersion",
                            "description": "API version"
                        },
                        "description": "API version"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RouteAuthorizationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health-check": {
            "get": {
                "summary": "Root",
                "operationId": "root_health_check_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "summary": "Metrics",
                "operationId": "metrics_metrics_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "APIVersion": {
                "type": "string",
                "enum": [
                    "v1"
                ],
                "title": "APIVersion"
            },
            "ApiKeyConfigResponse": {
                "properties": {
                    "client_id": {
                        "type": "string",
                        "title": "Client Id"
                    },
                    "client_key": {
                        "type": "string",
                        "title": "Client Key"
                    }
                },
                "type": "object",
                "required": [
                    "client_id",
                    "client_key"
                ],
                "title": "ApiKeyConfigResponse"
            },
            "ComponentConfigCreate": {
                "properties": {
                    "component_type": {
                        "$ref": "#/components/schemas/ComponentType"
                    },
                    "allowed_urls": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Allowed Urls"
                    },
                    "config": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Config"
                    },
                    "api_key_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Api Key Id"
                    }
                },
                "type": "object",
                "required": [
                    "component_type",
                    "allowed_urls",
                    "config",
                    "api_key_id"
                ],
                "title": "ComponentConfigCreate"
            },
            "ComponentConfigResponse": {
                "properties": {
                    "component_type": {
                        "$ref": "#/components/schemas/ComponentType"
                    },
                    "allowed_urls": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Allowed Urls"
                    },
                    "config": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Config"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "slug": {
                        "type": "string",
                        "title": "Slug"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id"
                    },
                    "api_key_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Api Key Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "component_type",
                    "allowed_urls",
                    "config",
                    "id",
                    "slug",
                    "organization_id",
                    "api_key_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "ComponentConfigResponse"
            },
            "ComponentConfigSlugResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id"
                    },
                    "config": {
                        "$ref": "#/components/schemas/JsonValue"
                    },
                    "component_type": {
                        "$ref": "#/components/schemas/ComponentType"
                    },
                    "slug": {
                        "type": "string",
                        "title": "Slug"
                    },
                    "api_key_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Api Key Id"
                    },
                    "api_key": {
                        "$ref": "#/components/schemas/ApiKeyConfigResponse"
                    },
                    "allowed_urls": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Allowed Urls"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "organization_id",
                    "config",
                    "component_type",
                    "slug",
                    "api_key_id",
                    "api_key",
                    "allowed_urls",
                    "created_at",
                    "updated_at"
                ],
                "title": "ComponentConfigSlugResponse"
            },
            "ComponentConfigUpdate": {
                "properties": {
                    "component_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ComponentType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "allowed_urls": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allowed Urls"
                    },
                    "config": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Config"
                    },
                    "api_key_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key Id"
                    }
                },
                "type": "object",
                "title": "ComponentConfigUpdate"
            },
            "ComponentType": {
                "type": "string",
                "enum": [
                    "discover"
                ],
                "title": "ComponentType"
            },
            "ConfirmForgotPasswordRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "code": {
                        "type": "string",
                        "title": "Code"
                    },
                    "new_password": {
                        "type": "string",
                        "title": "New Password"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "code",
                    "new_password"
                ],
                "title": "ConfirmForgotPasswordRequest"
            },
            "ContentProtectionCreate": {
                "properties": {
                    "cp_text_preview_length": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 1000.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Text Preview Length",
                        "description": "Maximum length of text preview in characters",
                        "default": 250
                    },
                    "cp_audio_preview_length": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 160.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Audio Preview Length",
                        "description": "Maximum length of audio preview in seconds",
                        "default": 15
                    },
                    "cp_allowed_reference": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Allowed Reference",
                        "description": "Whether content can be referenced in other works",
                        "default": true
                    },
                    "cp_allowed_verbatim": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Allowed Verbatim",
                        "description": "Whether verbatim copying is allowed",
                        "default": true
                    },
                    "cp_allowed_summary": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Allowed Summary",
                        "description": "Whether summarization is allowed",
                        "default": true
                    },
                    "cp_allowed_translation": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Allowed Translation",
                        "description": "Whether translation is allowed",
                        "default": false
                    },
                    "cp_allowed_format_conversion": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Allowed Format Conversion",
                        "description": "Whether format conversion is allowed",
                        "default": false
                    },
                    "cp_apply_scope": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ContentProtectionScope"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Scope of content protection rules application",
                        "default": "all_content"
                    },
                    "content_uuids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Content Uuids",
                        "description": "List of specific content UUIDs to apply protection to"
                    },
                    "platforms": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/PlatformPatchMapping"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Platforms",
                        "description": "List of platform mappings with their enabled status"
                    },
                    "allow_model_training": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allow Model Training",
                        "description": "Whether content can be used for model training",
                        "default": false
                    }
                },
                "type": "object",
                "title": "ContentProtectionCreate",
                "description": "Request model for creating new content protection settings.\n\nUsed for both organization and publisher-level configurations.\nDefault values are applied when not provided."
            },
            "ContentProtectionPatch": {
                "properties": {
                    "cp_text_preview_length": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 1000.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Text Preview Length",
                        "description": "Maximum length of text preview in characters"
                    },
                    "cp_audio_preview_length": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 160.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Audio Preview Length",
                        "description": "Maximum length of audio preview in seconds"
                    },
                    "cp_allowed_reference": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Allowed Reference",
                        "description": "Whether content can be referenced in other works"
                    },
                    "cp_allowed_verbatim": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Allowed Verbatim",
                        "description": "Whether verbatim copying is allowed"
                    },
                    "cp_allowed_summary": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Allowed Summary",
                        "description": "Whether summarization is allowed"
                    },
                    "cp_allowed_translation": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Allowed Translation",
                        "description": "Whether translation is allowed"
                    },
                    "cp_allowed_format_conversion": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cp Allowed Format Conversion",
                        "description": "Whether format conversion is allowed"
                    },
                    "cp_apply_scope": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ContentProtectionScope"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Scope of content protection rules application"
                    },
                    "content_uuids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Content Uuids",
                        "description": "List of specific content UUIDs to apply protection to"
                    },
                    "platforms": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/PlatformPatchMapping"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Platforms",
                        "description": "List of platform mappings with their enabled status"
                    },
                    "allow_model_training": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allow Model Training",
                        "description": "Whether content can be used for model training"
                    }
                },
                "type": "object",
                "title": "ContentProtectionPatch",
                "description": "Model for partial updates to content protection settings.\n\nAll fields are optional to support partial updates.",
                "examples": [
                    {
                        "allow_model_training": true,
                        "content_uuids": [],
                        "cp_allowed_format_conversion": true,
                        "cp_allowed_reference": true,
                        "cp_allowed_summary": true,
                        "cp_allowed_translation": true,
                        "cp_allowed_verbatim": true,
                        "cp_apply_scope": "all_content",
                        "cp_audio_preview_length": 30,
                        "cp_text_preview_length": 300,
                        "platforms": [
                            {
                                "is_enabled": true,
                                "platform_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                            },
                            {
                                "is_enabled": false,
                                "platform_id": "3fa85f64-5717-4562-b3fc-2c963f66afa7"
                            }
                        ]
                    }
                ]
            },
            "ContentProtectionResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Unique identifier for this configuration"
                    },
                    "publisher_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Id",
                        "description": "Publisher that owns this configuration"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id",
                        "description": "Organization that owns this configuration"
                    },
                    "cp_text_preview_length": {
                        "type": "integer",
                        "title": "Cp Text Preview Length",
                        "description": "Maximum length of text preview in characters",
                        "default": 250
                    },
                    "cp_audio_preview_length": {
                        "type": "integer",
                        "title": "Cp Audio Preview Length",
                        "description": "Maximum length of audio preview in seconds",
                        "default": 15
                    },
                    "cp_allowed_reference": {
                        "type": "boolean",
                        "title": "Cp Allowed Reference",
                        "description": "Whether content can be referenced in other works",
                        "default": true
                    },
                    "cp_allowed_verbatim": {
                        "type": "boolean",
                        "title": "Cp Allowed Verbatim",
                        "description": "Whether verbatim copying is allowed",
                        "default": true
                    },
                    "cp_allowed_summary": {
                        "type": "boolean",
                        "title": "Cp Allowed Summary",
                        "description": "Whether summarization is allowed",
                        "default": true
                    },
                    "cp_allowed_translation": {
                        "type": "boolean",
                        "title": "Cp Allowed Translation",
                        "description": "Whether translation is allowed",
                        "default": false
                    },
                    "cp_allowed_format_conversion": {
                        "type": "boolean",
                        "title": "Cp Allowed Format Conversion",
                        "description": "Whether format conversion is allowed",
                        "default": false
                    },
                    "cp_apply_scope": {
                        "$ref": "#/components/schemas/ContentProtectionScope",
                        "description": "Scope of content protection rules application",
                        "default": "all_content"
                    },
                    "content_uuids": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "Content Uuids",
                        "description": "List of specific content UUIDs to apply protection to",
                        "default": []
                    },
                    "platforms": {
                        "items": {
                            "$ref": "#/components/schemas/PlatformMappingBase"
                        },
                        "type": "array",
                        "title": "Platforms",
                        "description": "List of platform mappings where these settings apply",
                        "default": []
                    },
                    "allow_model_training": {
                        "type": "boolean",
                        "title": "Allow Model Training",
                        "description": "Whether content can be used for model training",
                        "default": false
                    },
                    "last_modified_by": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Modified By",
                        "description": "ID of user who last modified this configuration"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "When this configuration was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "When this configuration was last updated"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "organization_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "ContentProtectionResponse",
                "description": "Response model for content protection operations.\n\nIncludes all settings plus system-generated fields."
            },
            "ContentProtectionScope": {
                "type": "string",
                "enum": [
                    "all_content",
                    "content_group",
                    "individual"
                ],
                "title": "ContentProtectionScope"
            },
            "CreateOrganizationInviteRequest": {
                "properties": {
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id"
                    },
                    "user_email": {
                        "type": "string",
                        "title": "User Email"
                    },
                    "role_name": {
                        "type": "string",
                        "title": "Role Name"
                    },
                    "expires_in_days": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires In Days",
                        "default": 7
                    }
                },
                "type": "object",
                "required": [
                    "organization_id",
                    "user_email",
                    "role_name"
                ],
                "title": "CreateOrganizationInviteRequest"
            },
            "DRMAppsEnum": {
                "type": "string",
                "enum": [
                    "aspen",
                    "kallm"
                ],
                "title": "DRMAppsEnum"
            },
            "DocumentModel": {
                "properties": {
                    "cluster": {
                        "type": "string",
                        "title": "Cluster"
                    },
                    "collectionName": {
                        "type": "string",
                        "title": "Collectionname"
                    },
                    "tenant": {
                        "type": "string",
                        "title": "Tenant"
                    },
                    "organizationId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organizationid",
                        "default": ""
                    },
                    "organization": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization",
                        "default": ""
                    },
                    "publisherId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherid",
                        "default": ""
                    },
                    "publisher": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher",
                        "default": ""
                    },
                    "publisherLogo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherlogo",
                        "default": ""
                    },
                    "publisherFav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherfav",
                        "default": ""
                    },
                    "publisherBw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherbw",
                        "default": ""
                    },
                    "publisherUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherurl",
                        "default": ""
                    },
                    "publisherHierarchy": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchy",
                        "default": ""
                    },
                    "publisherHierarchyLogo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchylogo",
                        "default": ""
                    },
                    "publisherHierarchyFav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchyfav",
                        "default": ""
                    },
                    "publisherHierarchyBw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchybw",
                        "default": ""
                    },
                    "publisherHierarchyUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchyurl",
                        "default": ""
                    },
                    "drm": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DRMAppsEnum"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Drm",
                        "description": "List of allowed distribution apps",
                        "example": [
                            "aspen",
                            "kallm"
                        ]
                    },
                    "producer_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Producer Id",
                        "default": ""
                    },
                    "denomination": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Denomination",
                        "default": ""
                    },
                    "evergreen": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Evergreen",
                        "default": true
                    },
                    "author": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Author",
                        "description": "List of authors or comma-separated string of authors",
                        "default": []
                    },
                    "isbn": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Isbn",
                        "default": ""
                    },
                    "itemTitle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemtitle",
                        "default": ""
                    },
                    "itemSubtitle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemsubtitle",
                        "default": ""
                    },
                    "itemImage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemimage",
                        "default": ""
                    },
                    "itemUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemurl",
                        "default": ""
                    },
                    "itemFile": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemfile",
                        "default": ""
                    },
                    "itemSummary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemsummary",
                        "default": ""
                    },
                    "itemNumber": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemnumber",
                        "default": ""
                    },
                    "itemExtra": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemextra",
                        "default": ""
                    },
                    "item_tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Item Tags",
                        "description": "List of tags or comma-separated string of tags",
                        "default": []
                    },
                    "h2Title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Title",
                        "default": ""
                    },
                    "h2Subtitle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Subtitle",
                        "default": ""
                    },
                    "h2Image": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Image",
                        "default": ""
                    },
                    "h2Url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Url",
                        "default": ""
                    },
                    "h2File": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2File",
                        "default": ""
                    },
                    "h2Summary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Summary",
                        "default": ""
                    },
                    "h2Number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Number",
                        "default": ""
                    },
                    "h2Extra": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Extra",
                        "default": ""
                    },
                    "h3Title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Title",
                        "default": ""
                    },
                    "h3Subtitle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Subtitle",
                        "default": ""
                    },
                    "h3Image": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Image",
                        "default": ""
                    },
                    "h3Url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Url",
                        "default": ""
                    },
                    "h3File": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3File",
                        "default": ""
                    },
                    "h3Summary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Summary",
                        "default": ""
                    },
                    "h3Number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Number",
                        "default": ""
                    },
                    "h3Extra": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Extra",
                        "default": ""
                    },
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "default": ""
                    },
                    "duration": {
                        "type": "string",
                        "title": "Duration",
                        "default": ""
                    },
                    "pages": {
                        "type": "string",
                        "title": "Pages",
                        "default": ""
                    },
                    "publicationDate": {
                        "type": "string",
                        "title": "Publicationdate",
                        "default": ""
                    },
                    "hostedUrl": {
                        "type": "string",
                        "title": "Hostedurl",
                        "default": ""
                    },
                    "pubType": {
                        "type": "string",
                        "title": "Pubtype",
                        "default": ""
                    },
                    "fileRef": {
                        "type": "string",
                        "title": "Fileref"
                    },
                    "fileIds": {
                        "items": {
                            "$ref": "#/components/schemas/FileIdModel"
                        },
                        "type": "array",
                        "title": "Fileids"
                    },
                    "batchId": {
                        "type": "string",
                        "title": "Batchid"
                    },
                    "metadataKey": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadatakey",
                        "default": "default"
                    }
                },
                "type": "object",
                "required": [
                    "cluster",
                    "collectionName",
                    "tenant",
                    "fileRef",
                    "fileIds",
                    "batchId"
                ],
                "title": "DocumentModel"
            },
            "EnrichmentUpdateModel": {
                "properties": {
                    "field_path": {
                        "type": "string",
                        "title": "Field Path"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value"
                    }
                },
                "type": "object",
                "required": [
                    "field_path",
                    "value"
                ],
                "title": "EnrichmentUpdateModel"
            },
            "ExcelDocumentModel": {
                "properties": {
                    "cluster": {
                        "type": "string",
                        "title": "Cluster"
                    },
                    "collectionName": {
                        "type": "string",
                        "title": "Collectionname"
                    },
                    "tenant": {
                        "type": "string",
                        "title": "Tenant"
                    },
                    "organizationId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organizationid",
                        "default": ""
                    },
                    "organization": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization",
                        "default": ""
                    },
                    "publisherId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherid",
                        "default": ""
                    },
                    "publisher": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher",
                        "default": ""
                    },
                    "publisherLogo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherlogo",
                        "default": ""
                    },
                    "publisherFav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherfav",
                        "default": ""
                    },
                    "publisherBw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherbw",
                        "default": ""
                    },
                    "publisherUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherurl",
                        "default": ""
                    },
                    "publisherHierarchy": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchy",
                        "default": ""
                    },
                    "publisherHierarchyLogo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchylogo",
                        "default": ""
                    },
                    "publisherHierarchyFav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchyfav",
                        "default": ""
                    },
                    "publisherHierarchyBw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchybw",
                        "default": ""
                    },
                    "publisherHierarchyUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchyurl",
                        "default": ""
                    },
                    "drm": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DRMAppsEnum"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Drm",
                        "description": "List of allowed distribution apps",
                        "example": [
                            "aspen",
                            "kallm"
                        ]
                    },
                    "fileRef": {
                        "type": "string",
                        "title": "Fileref"
                    },
                    "metadataKey": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadatakey",
                        "default": "default"
                    }
                },
                "type": "object",
                "required": [
                    "cluster",
                    "collectionName",
                    "tenant",
                    "fileRef"
                ],
                "title": "ExcelDocumentModel"
            },
            "FileIdModel": {
                "properties": {
                    "fileRef": {
                        "type": "string",
                        "title": "Fileref"
                    },
                    "fileId": {
                        "type": "string",
                        "title": "Fileid"
                    }
                },
                "type": "object",
                "required": [
                    "fileRef",
                    "fileId"
                ],
                "title": "FileIdModel"
            },
            "FileInsertRequest": {
                "properties": {
                    "file_name": {
                        "type": "string",
                        "title": "File Name"
                    },
                    "weaviate_tenant": {
                        "type": "string",
                        "title": "Weaviate Tenant"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id"
                    }
                },
                "type": "object",
                "required": [
                    "file_name",
                    "weaviate_tenant",
                    "organization_id"
                ],
                "title": "FileInsertRequest"
            },
            "FileInsertResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "main_file_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Main File Id"
                    },
                    "item_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Item Ids"
                    }
                },
                "type": "object",
                "required": [
                    "success",
                    "message",
                    "item_ids"
                ],
                "title": "FileInsertResponse"
            },
            "FileListItem": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "folder": {
                        "type": "string",
                        "title": "Folder"
                    },
                    "last_modified": {
                        "type": "string",
                        "title": "Last Modified"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "folder",
                    "last_modified"
                ],
                "title": "FileListItem"
            },
            "FileListResponse": {
                "properties": {
                    "files": {
                        "items": {
                            "$ref": "#/components/schemas/FileListItem"
                        },
                        "type": "array",
                        "title": "Files"
                    }
                },
                "type": "object",
                "required": [
                    "files"
                ],
                "title": "FileListResponse"
            },
            "FileUploadStatusModel": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "task_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Id"
                    },
                    "batch_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Batch Id"
                    },
                    "processing_details": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Processing Details"
                    }
                },
                "type": "object",
                "required": [
                    "success",
                    "message"
                ],
                "title": "FileUploadStatusModel"
            },
            "FilesInsertRequest": {
                "properties": {
                    "files": {
                        "items": {
                            "$ref": "#/components/schemas/FileInsertRequest"
                        },
                        "type": "array",
                        "title": "Files"
                    }
                },
                "type": "object",
                "required": [
                    "files"
                ],
                "title": "FilesInsertRequest"
            },
            "FilterParams": {
                "properties": {
                    "publisher_id": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Id"
                    },
                    "publisher_name": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Name"
                    },
                    "status": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Status"
                    },
                    "weaviate_tenant": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Weaviate Tenant"
                    },
                    "file_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "File Name"
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id"
                    }
                },
                "type": "object",
                "title": "FilterParams"
            },
            "ForgotPasswordRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "ForgotPasswordRequest"
            },
            "GetIngestedDataRequest": {
                "properties": {
                    "filter_type": {
                        "type": "string",
                        "title": "Filter Type",
                        "default": "all"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page",
                        "default": 1
                    },
                    "page_size": {
                        "type": "integer",
                        "title": "Page Size",
                        "default": 50
                    },
                    "filters": {
                        "$ref": "#/components/schemas/FilterParams"
                    },
                    "sort_by": {
                        "type": "string",
                        "title": "Sort By",
                        "default": "created_at"
                    },
                    "sort_order": {
                        "type": "string",
                        "title": "Sort Order",
                        "default": "desc"
                    },
                    "paginate_parents_only": {
                        "type": "boolean",
                        "title": "Paginate Parents Only",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "filters"
                ],
                "title": "GetIngestedDataRequest"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "IngestedDataItem": {
                "properties": {
                    "item_id": {
                        "type": "string",
                        "title": "Item Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "title": "Organization Id"
                    },
                    "task_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Task Ids"
                    },
                    "file_name": {
                        "type": "string",
                        "title": "File Name"
                    },
                    "weaviate_cluster": {
                        "type": "string",
                        "title": "Weaviate Cluster"
                    },
                    "weaviate_collection": {
                        "type": "string",
                        "title": "Weaviate Collection"
                    },
                    "publisher_name": {
                        "type": "string",
                        "title": "Publisher Name"
                    },
                    "publisher_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Id"
                    },
                    "weaviate_tenant": {
                        "type": "string",
                        "title": "Weaviate Tenant"
                    },
                    "chunk_uuids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Chunk Uuids"
                    },
                    "enriched_chunk_uuids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Enriched Chunk Uuids"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "chunking_time": {
                        "type": "number",
                        "title": "Chunking Time"
                    },
                    "enrichment_start_time": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enrichment Start Time"
                    },
                    "enrichment_end_time": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enrichment End Time"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At"
                    },
                    "updated_at": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At"
                    },
                    "related_file_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Related File Id"
                    },
                    "enriched_chunk_count": {
                        "type": "integer",
                        "title": "Enriched Chunk Count"
                    },
                    "chunk_count": {
                        "type": "integer",
                        "title": "Chunk Count"
                    }
                },
                "type": "object",
                "required": [
                    "item_id",
                    "organization_id",
                    "task_ids",
                    "file_name",
                    "weaviate_cluster",
                    "weaviate_collection",
                    "publisher_name",
                    "weaviate_tenant",
                    "chunk_uuids",
                    "enriched_chunk_uuids",
                    "status",
                    "chunking_time",
                    "enriched_chunk_count",
                    "chunk_count"
                ],
                "title": "IngestedDataItem"
            },
            "IngestedDataResponse": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/IngestedDataItem"
                        },
                        "type": "array",
                        "title": "Data"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationInfo"
                    }
                },
                "type": "object",
                "required": [
                    "data",
                    "pagination"
                ],
                "title": "IngestedDataResponse"
            },
            "IngestionCountData-Input": {
                "properties": {
                    "files": {
                        "$ref": "#/components/schemas/IngestionItemStats",
                        "description": "Statistics for files"
                    },
                    "chunks": {
                        "$ref": "#/components/schemas/IngestionItemStats",
                        "description": "Statistics for chunks"
                    }
                },
                "type": "object",
                "required": [
                    "files",
                    "chunks"
                ],
                "title": "IngestionCountData",
                "description": "Count data"
            },
            "IngestionCountData-Output": {
                "properties": {
                    "files": {
                        "$ref": "#/components/schemas/IngestionItemStats",
                        "description": "Statistics for files"
                    },
                    "chunks": {
                        "$ref": "#/components/schemas/IngestionItemStats",
                        "description": "Statistics for chunks"
                    }
                },
                "type": "object",
                "required": [
                    "files",
                    "chunks"
                ],
                "title": "IngestionCountData",
                "description": "Count data"
            },
            "IngestionDocumentModel": {
                "properties": {
                    "cluster": {
                        "type": "string",
                        "title": "Cluster"
                    },
                    "collectionName": {
                        "type": "string",
                        "title": "Collectionname"
                    },
                    "tenant": {
                        "type": "string",
                        "title": "Tenant"
                    },
                    "organizationId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organizationid",
                        "default": ""
                    },
                    "organization": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization",
                        "default": ""
                    },
                    "publisherId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherid",
                        "default": ""
                    },
                    "publisher": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher",
                        "default": ""
                    },
                    "publisherLogo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherlogo",
                        "default": ""
                    },
                    "publisherFav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherfav",
                        "default": ""
                    },
                    "publisherBw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherbw",
                        "default": ""
                    },
                    "publisherUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherurl",
                        "default": ""
                    },
                    "publisherHierarchy": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchy",
                        "default": ""
                    },
                    "publisherHierarchyLogo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchylogo",
                        "default": ""
                    },
                    "publisherHierarchyFav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchyfav",
                        "default": ""
                    },
                    "publisherHierarchyBw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchybw",
                        "default": ""
                    },
                    "publisherHierarchyUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchyurl",
                        "default": ""
                    },
                    "drm": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DRMAppsEnum"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Drm",
                        "description": "List of allowed distribution apps",
                        "example": [
                            "aspen",
                            "kallm"
                        ]
                    },
                    "producer_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Producer Id",
                        "default": ""
                    },
                    "denomination": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Denomination",
                        "default": ""
                    },
                    "evergreen": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Evergreen",
                        "default": true
                    },
                    "author": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Author",
                        "description": "List of authors or comma-separated string of authors",
                        "default": []
                    },
                    "isbn": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Isbn",
                        "default": ""
                    },
                    "itemTitle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemtitle",
                        "default": ""
                    },
                    "itemSubtitle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemsubtitle",
                        "default": ""
                    },
                    "itemImage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemimage",
                        "default": ""
                    },
                    "itemUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemurl",
                        "default": ""
                    },
                    "itemFile": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemfile",
                        "default": ""
                    },
                    "itemSummary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemsummary",
                        "default": ""
                    },
                    "itemNumber": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemnumber",
                        "default": ""
                    },
                    "itemExtra": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemextra",
                        "default": ""
                    },
                    "item_tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Item Tags",
                        "description": "List of tags or comma-separated string of tags",
                        "default": []
                    },
                    "h2Title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Title",
                        "default": ""
                    },
                    "h2Subtitle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Subtitle",
                        "default": ""
                    },
                    "h2Image": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Image",
                        "default": ""
                    },
                    "h2Url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Url",
                        "default": ""
                    },
                    "h2File": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2File",
                        "default": ""
                    },
                    "h2Summary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Summary",
                        "default": ""
                    },
                    "h2Number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Number",
                        "default": ""
                    },
                    "h2Extra": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Extra",
                        "default": ""
                    },
                    "h3Title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Title",
                        "default": ""
                    },
                    "h3Subtitle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Subtitle",
                        "default": ""
                    },
                    "h3Image": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Image",
                        "default": ""
                    },
                    "h3Url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Url",
                        "default": ""
                    },
                    "h3File": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3File",
                        "default": ""
                    },
                    "h3Summary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Summary",
                        "default": ""
                    },
                    "h3Number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Number",
                        "default": ""
                    },
                    "h3Extra": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Extra",
                        "default": ""
                    },
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "default": ""
                    },
                    "duration": {
                        "type": "string",
                        "title": "Duration",
                        "default": ""
                    },
                    "pages": {
                        "type": "string",
                        "title": "Pages",
                        "default": ""
                    },
                    "publicationDate": {
                        "type": "string",
                        "title": "Publicationdate",
                        "default": ""
                    },
                    "hostedUrl": {
                        "type": "string",
                        "title": "Hostedurl",
                        "default": ""
                    },
                    "pubType": {
                        "type": "string",
                        "title": "Pubtype",
                        "default": ""
                    },
                    "fileRef": {
                        "type": "string",
                        "title": "Fileref"
                    },
                    "item_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Item Id"
                    },
                    "metadataKey": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadatakey",
                        "default": "default"
                    }
                },
                "type": "object",
                "required": [
                    "cluster",
                    "collectionName",
                    "tenant",
                    "fileRef"
                ],
                "title": "IngestionDocumentModel"
            },
            "IngestionItemStats": {
                "properties": {
                    "total": {
                        "type": "integer",
                        "title": "Total",
                        "description": "Total count"
                    },
                    "by_type": {
                        "$ref": "#/components/schemas/IngestionTypeCounts"
                    }
                },
                "type": "object",
                "required": [
                    "total",
                    "by_type"
                ],
                "title": "IngestionItemStats",
                "description": "Statistics for files or chunks"
            },
            "IngestionSummaryRequest": {
                "properties": {
                    "start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Date",
                        "description": "Start date for the time range (format: YYYY-MM-DD). Defaults to 30 days ago."
                    },
                    "end_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Date",
                        "description": "End date for the time range (format: YYYY-MM-DD). Defaults to today."
                    },
                    "publisher_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Ids",
                        "description": "\n        Optional list of publisher IDs to filter the data by:\n        - For Global Admins: Filter data to only include these publishers\n        - For Org Admins: Filter data to only include these publishers (must belong to admin's organization)\n        - For Publishers: Unused for publishers\n        "
                    }
                },
                "type": "object",
                "title": "IngestionSummaryRequest",
                "description": "Request model for ingestion summary statistics endpoint",
                "examples": [
                    {
                        "end_date": "2023-01-31",
                        "publisher_ids": [
                            "123e4567-e89b-12d3-a456-426614174001",
                            "123e4567-e89b-12d3-a456-426614174002"
                        ],
                        "start_date": "2023-01-01"
                    }
                ]
            },
            "IngestionSummaryResponse-Input": {
                "properties": {
                    "counts": {
                        "$ref": "#/components/schemas/IngestionCountData-Input",
                        "description": "Counts for files and chunks"
                    }
                },
                "type": "object",
                "required": [
                    "counts"
                ],
                "title": "IngestionSummaryResponse",
                "description": "Response model for ingestion summary statistics endpoint",
                "example": {
                    "counts": {
                        "chunks": {
                            "by_type": {
                                "article": 20,
                                "audio": 10,
                                "book": 100,
                                "podcast": 30,
                                "video": 60
                            },
                            "total": 200
                        },
                        "files": {
                            "by_type": {
                                "article": 2,
                                "audio": 1,
                                "book": 1,
                                "podcast": 3,
                                "video": 6
                            },
                            "total": 12
                        }
                    }
                }
            },
            "IngestionSummaryResponse-Output": {
                "properties": {
                    "counts": {
                        "$ref": "#/components/schemas/IngestionCountData-Output",
                        "description": "Counts for files and chunks"
                    }
                },
                "type": "object",
                "required": [
                    "counts"
                ],
                "title": "IngestionSummaryResponse",
                "description": "Response model for ingestion summary statistics endpoint",
                "example": {
                    "counts": {
                        "chunks": {
                            "by_type": {
                                "article": 20,
                                "audio": 10,
                                "book": 100,
                                "podcast": 30,
                                "video": 60
                            },
                            "total": 200
                        },
                        "files": {
                            "by_type": {
                                "article": 2,
                                "audio": 1,
                                "book": 1,
                                "podcast": 3,
                                "video": 6
                            },
                            "total": 12
                        }
                    }
                }
            },
            "IngestionTimeseriesData": {
                "properties": {
                    "files": {
                        "items": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "type": "array",
                        "title": "Files",
                        "description": "Time series data for files [timestamp, count]"
                    },
                    "chunks": {
                        "items": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "type": "array",
                        "title": "Chunks",
                        "description": "Time series data for chunks [timestamp, count]"
                    }
                },
                "type": "object",
                "required": [
                    "files",
                    "chunks"
                ],
                "title": "IngestionTimeseriesData",
                "description": "Timeseries data"
            },
            "IngestionTimeseriesRequest": {
                "properties": {
                    "start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Date",
                        "description": "Start date for the time range (format: YYYY-MM-DD). Defaults to 30 days ago."
                    },
                    "end_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Date",
                        "description": "End date for the time range (format: YYYY-MM-DD). Defaults to today."
                    },
                    "publisher_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Ids",
                        "description": "\n        Optional list of publisher IDs to filter the data by:\n        - For Global Admins: Filter data to only include these publishers\n        - For Org Admins: Filter data to only include these publishers (must belong to admin's organization)\n        - For Publishers: Unused for publishers\n        "
                    }
                },
                "type": "object",
                "title": "IngestionTimeseriesRequest",
                "description": "Request model for ingestion timeseries statistics endpoint",
                "examples": [
                    {
                        "end_date": "2023-01-31",
                        "publisher_ids": [
                            "123e4567-e89b-12d3-a456-426614174001",
                            "123e4567-e89b-12d3-a456-426614174002"
                        ],
                        "start_date": "2023-01-01"
                    }
                ]
            },
            "IngestionTimeseriesResponse": {
                "properties": {
                    "timeseries": {
                        "$ref": "#/components/schemas/IngestionTimeseriesData",
                        "description": "Timeseries data for files and chunks"
                    }
                },
                "type": "object",
                "required": [
                    "timeseries"
                ],
                "title": "IngestionTimeseriesResponse",
                "description": "Response model for ingestion timeseries statistics endpoint",
                "example": {
                    "timeseries": {
                        "chunks": [
                            [
                                1646092800000,
                                50
                            ],
                            [
                                1646179200000,
                                70
                            ]
                        ],
                        "files": [
                            [
                                1646092800000,
                                5
                            ],
                            [
                                1646179200000,
                                7
                            ]
                        ]
                    }
                }
            },
            "IngestionTypeCounts": {
                "properties": {
                    "book": {
                        "type": "integer",
                        "title": "Book",
                        "description": "Count for Book type",
                        "default": 0
                    },
                    "article": {
                        "type": "integer",
                        "title": "Article",
                        "description": "Count for Article type",
                        "default": 0
                    },
                    "video": {
                        "type": "integer",
                        "title": "Video",
                        "description": "Count for Video type",
                        "default": 0
                    },
                    "podcast": {
                        "type": "integer",
                        "title": "Podcast",
                        "description": "Count for Podcast type",
                        "default": 0
                    },
                    "audio": {
                        "type": "integer",
                        "title": "Audio",
                        "description": "Count for Audio type",
                        "default": 0
                    }
                },
                "type": "object",
                "title": "IngestionTypeCounts",
                "description": "Counts by content type"
            },
            "JsonValue": {},
            "LicenseVersionCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the license version",
                        "examples": [
                            "1.0",
                            "2.5.1"
                        ]
                    },
                    "version_number": {
                        "type": "number",
                        "exclusiveMinimum": 0.0,
                        "title": "Version Number",
                        "description": "Version number for the license (should be unique and positive)",
                        "examples": [
                            1.0,
                            2.5
                        ]
                    },
                    "license_text": {
                        "type": "string",
                        "minLength": 10,
                        "title": "License Text",
                        "description": "Full text of the license agreement"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Whether this license version is active and available for use",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "version_number",
                    "license_text"
                ],
                "title": "LicenseVersionCreate",
                "description": "Model for creating a new license version.\nExtends the base model with no additional fields.",
                "examples": [
                    {
                        "is_active": true,
                        "license_text": "This is the full text of the license agreement...",
                        "name": "1.0",
                        "version_number": 1.0
                    }
                ]
            },
            "LicenseVersionMappingResponse": {
                "properties": {
                    "license_version_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "License Version Id",
                        "description": "Unique identifier for the license version",
                        "examples": [
                            "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        ]
                    },
                    "is_accepted": {
                        "type": "boolean",
                        "title": "Is Accepted",
                        "description": "Whether this license version has been accepted",
                        "default": false
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Unique identifier for the mapping",
                        "examples": [
                            "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        ]
                    },
                    "accepted_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Accepted At",
                        "description": "When this license version was accepted"
                    },
                    "accepted_by": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Accepted By",
                        "description": "User ID or email of who accepted this license version"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "When this mapping was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "When this mapping was last updated"
                    },
                    "already_accepted": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Already Accepted",
                        "description": "Indicates if this license version was already accepted before this request",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "license_version_id",
                    "id",
                    "created_at",
                    "updated_at"
                ],
                "title": "LicenseVersionMappingResponse",
                "description": "Response model for license version mapping operations.\n\nExtends the base model with system-generated fields and acceptance details.",
                "examples": [
                    {
                        "accepted_at": "2025-06-15T12:00:00Z",
                        "accepted_by": "user@example.com",
                        "already_accepted": false,
                        "created_at": "2025-06-15T12:00:00Z",
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "is_accepted": true,
                        "license_version_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "licensing_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "updated_at": "2025-06-15T12:00:00Z"
                    }
                ]
            },
            "LicenseVersionResponse": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id",
                        "description": "Unique identifier for the license version",
                        "examples": [
                            "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        ]
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Name of the license version",
                        "examples": [
                            "1.0",
                            "2.5.1"
                        ]
                    },
                    "version_number": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version Number",
                        "description": "Version number for the license",
                        "examples": [
                            1.0,
                            2.5
                        ]
                    },
                    "license_text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "License Text",
                        "description": "Full text of the license agreement"
                    },
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active",
                        "description": "Whether this license version is active and available for use"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At",
                        "description": "When this license version was created"
                    },
                    "updated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At",
                        "description": "When this license version was last updated"
                    },
                    "is_first_acceptance": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is First Acceptance",
                        "description": "Indicates if this would be the first license version being accepted by the entity"
                    }
                },
                "type": "object",
                "title": "LicenseVersionResponse",
                "description": "Response model for license version operations.\nStandalone model with all fields optional.",
                "examples": [
                    {
                        "created_at": "2025-06-15T12:00:00Z",
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "is_active": true,
                        "is_first_acceptance": false,
                        "license_text": "This is the full text of the license agreement...",
                        "name": "Standard Publisher License v1.0",
                        "updated_at": "2025-06-15T12:00:00Z",
                        "version_number": 1.0
                    }
                ]
            },
            "LicenseVersionUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Name of the license version"
                    },
                    "license_text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "License Text",
                        "description": "Full text of the license agreement"
                    },
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active",
                        "description": "Whether this license version is active and available for use"
                    }
                },
                "type": "object",
                "title": "LicenseVersionUpdate",
                "description": "Model for updating license version data.\n\nAll fields are optional to support partial updates.",
                "examples": [
                    {
                        "is_active": false,
                        "license_text": "Updated license text...",
                        "name": "1.0"
                    }
                ]
            },
            "LicensingAuditListResponse": {
                "properties": {
                    "audit_logs": {
                        "items": {
                            "$ref": "#/components/schemas/LicensingAuditResponse"
                        },
                        "type": "array",
                        "minItems": 0,
                        "title": "Audit Logs",
                        "description": "List of audit log entries for the requested licensing configuration"
                    },
                    "total": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Total",
                        "description": "Total number of audit logs available (for pagination)",
                        "examples": [
                            5,
                            42,
                            100
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "audit_logs",
                    "total"
                ],
                "title": "LicensingAuditListResponse",
                "description": "Response model for a list of licensing audit logs.\n\nContains a paginated list of audit logs for a licensing configuration\nalong with the total count for pagination purposes.",
                "examples": [
                    {
                        "audit_logs": [
                            {
                                "action": "update",
                                "change_details": "Updated text preview length",
                                "created_at": "2025-03-01T12:00:00Z",
                                "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "licensing_id": "3fa85f64-5717-4562-b3fc-2c963f66afa7",
                                "modified_fields": [
                                    "cp_text_preview_length"
                                ],
                                "new_values": {
                                    "cp_text_preview_length": 500
                                },
                                "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa8",
                                "previous_values": {
                                    "cp_text_preview_length": 250
                                },
                                "publisher_id": "3fa85f64-5717-4562-b3fc-2c963f66afa9",
                                "user_id": "user@example.com"
                            }
                        ],
                        "total": 5
                    }
                ]
            },
            "LicensingAuditResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Unique identifier for the audit log entry",
                        "examples": [
                            "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        ]
                    },
                    "licensing_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Licensing Id",
                        "description": "ID of the licensing configuration this audit log relates to",
                        "examples": [
                            "3fa85f64-5717-4562-b3fc-2c963f66afa7"
                        ]
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id",
                        "description": "ID or email of the user who made the change",
                        "examples": [
                            "user@example.com",
                            "auth0|123456789"
                        ]
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id",
                        "description": "ID of the organization the licensing configuration belongs to",
                        "examples": [
                            "3fa85f64-5717-4562-b3fc-2c963f66afa8"
                        ]
                    },
                    "publisher_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Id",
                        "description": "ID of the publisher if this is a publisher-specific configuration",
                        "examples": [
                            "3fa85f64-5717-4562-b3fc-2c963f66afa9"
                        ]
                    },
                    "action": {
                        "type": "string",
                        "title": "Action",
                        "description": "Type of action performed (create, update, delete, accept_terms)",
                        "examples": [
                            "create",
                            "update",
                            "delete",
                            "accept_terms"
                        ]
                    },
                    "previous_values": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Previous Values",
                        "description": "Previous field values before the change was made (for update actions)"
                    },
                    "new_values": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "New Values",
                        "description": "New field values after the change was made (for create or update actions)"
                    },
                    "modified_fields": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Modified Fields",
                        "description": "List of field names that were modified in this change",
                        "examples": [
                            [
                                "cp_text_preview_length",
                                "cp_audio_preview_length"
                            ],
                            [
                                "platforms"
                            ]
                        ]
                    },
                    "change_details": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Change Details",
                        "description": "Human-readable description of the change that was made",
                        "examples": [
                            "Updated text preview length",
                            "Created default licensing configuration",
                            "Accepted license terms"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Timestamp when this change occurred",
                        "examples": [
                            "2025-03-01T12:00:00Z"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "licensing_id",
                    "organization_id",
                    "action",
                    "created_at"
                ],
                "title": "LicensingAuditResponse",
                "description": "Response model for licensing audit logs.\n\nRepresents a single audit record tracking a change made to a licensing configuration.\nContains details about what was changed, who made the change, and when.",
                "examples": [
                    {
                        "action": "update",
                        "change_details": "Updated preview length settings",
                        "created_at": "2025-03-01T12:00:00Z",
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "licensing_id": "3fa85f64-5717-4562-b3fc-2c963f66afa7",
                        "modified_fields": [
                            "cp_text_preview_length",
                            "cp_audio_preview_length"
                        ],
                        "new_values": {
                            "cp_audio_preview_length": 30,
                            "cp_text_preview_length": 500
                        },
                        "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa8",
                        "previous_values": {
                            "cp_audio_preview_length": 15,
                            "cp_text_preview_length": 250
                        },
                        "publisher_id": "3fa85f64-5717-4562-b3fc-2c963f66afa9",
                        "user_id": "user@example.com"
                    }
                ]
            },
            "MediaDocumentModel": {
                "properties": {
                    "metadataFileRef": {
                        "type": "string",
                        "title": "Metadatafileref"
                    },
                    "tenant": {
                        "type": "string",
                        "title": "Tenant"
                    },
                    "organization_id": {
                        "type": "string",
                        "title": "Organization Id"
                    },
                    "media_type": {
                        "type": "string",
                        "title": "Media Type"
                    }
                },
                "type": "object",
                "required": [
                    "metadataFileRef",
                    "tenant",
                    "organization_id",
                    "media_type"
                ],
                "title": "MediaDocumentModel"
            },
            "MetadataMapModel": {
                "properties": {
                    "cluster": {
                        "type": "string",
                        "title": "Cluster"
                    },
                    "collectionName": {
                        "type": "string",
                        "title": "Collectionname"
                    },
                    "tenant": {
                        "type": "string",
                        "title": "Tenant"
                    },
                    "organizationId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organizationid",
                        "default": ""
                    },
                    "organization": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization",
                        "default": ""
                    },
                    "publisherId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherid",
                        "default": ""
                    },
                    "publisher": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher",
                        "default": ""
                    },
                    "publisherLogo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherlogo",
                        "default": ""
                    },
                    "publisherFav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherfav",
                        "default": ""
                    },
                    "publisherBw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherbw",
                        "default": ""
                    },
                    "publisherUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherurl",
                        "default": ""
                    },
                    "publisherHierarchy": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchy",
                        "default": ""
                    },
                    "publisherHierarchyLogo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchylogo",
                        "default": ""
                    },
                    "publisherHierarchyFav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchyfav",
                        "default": ""
                    },
                    "publisherHierarchyBw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchybw",
                        "default": ""
                    },
                    "publisherHierarchyUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchyurl",
                        "default": ""
                    },
                    "drm": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DRMAppsEnum"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Drm",
                        "description": "List of allowed distribution apps",
                        "example": [
                            "aspen",
                            "kallm"
                        ]
                    },
                    "mdFileRef": {
                        "type": "string",
                        "title": "Mdfileref"
                    },
                    "mdFileId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mdfileid"
                    },
                    "zipFileRef": {
                        "type": "string",
                        "title": "Zipfileref"
                    },
                    "zipFileId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Zipfileid"
                    }
                },
                "type": "object",
                "required": [
                    "cluster",
                    "collectionName",
                    "tenant",
                    "mdFileRef",
                    "zipFileRef"
                ],
                "title": "MetadataMapModel"
            },
            "OrganizationCollectionResponse": {
                "properties": {
                    "organizations": {
                        "items": {
                            "$ref": "#/components/schemas/OrganizationResponse"
                        },
                        "type": "array",
                        "title": "Organizations"
                    }
                },
                "type": "object",
                "required": [
                    "organizations"
                ],
                "title": "OrganizationCollectionResponse"
            },
            "OrganizationCreateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the company"
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "Company URL"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address",
                        "description": "Company address"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "url",
                    "address"
                ],
                "title": "OrganizationCreateRequest"
            },
            "OrganizationCreateResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Organization ID"
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "Organization URL"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Organization name"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address",
                        "description": "Organization address"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Organization is active"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "url",
                    "name",
                    "address",
                    "is_active"
                ],
                "title": "OrganizationCreateResponse"
            },
            "OrganizationInviteResponse": {
                "properties": {
                    "invite_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Invite Id"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id"
                    },
                    "user_email": {
                        "type": "string",
                        "title": "User Email"
                    },
                    "invite_status": {
                        "type": "string",
                        "title": "Invite Status"
                    },
                    "invited_by": {
                        "type": "string",
                        "title": "Invited By"
                    },
                    "role_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Role Id"
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At"
                    },
                    "accepted_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Accepted At"
                    },
                    "inviter_email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Inviter Email"
                    },
                    "organization_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Name"
                    }
                },
                "type": "object",
                "required": [
                    "invite_id",
                    "organization_id",
                    "user_email",
                    "invite_status",
                    "invited_by",
                    "role_id",
                    "expires_at",
                    "accepted_at"
                ],
                "title": "OrganizationInviteResponse"
            },
            "OrganizationResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Organization ID"
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "Organization URL"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Organization name"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address",
                        "description": "Organization address"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Organization is active"
                    },
                    "tenants": {
                        "items": {
                            "$ref": "#/components/schemas/TenantResponse"
                        },
                        "type": "array",
                        "title": "Tenants",
                        "description": "Organization tenants",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "url",
                    "name",
                    "address",
                    "is_active"
                ],
                "title": "OrganizationResponse"
            },
            "OrganizationUpdateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the company"
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "Company URL"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address",
                        "description": "Company address"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "url",
                    "address"
                ],
                "title": "OrganizationUpdateRequest"
            },
            "OrganizationWithRoleResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Organization ID"
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "Organization URL"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Organization name"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address",
                        "description": "Organization address"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Organization is active"
                    },
                    "tenants": {
                        "items": {
                            "$ref": "#/components/schemas/TenantResponse"
                        },
                        "type": "array",
                        "title": "Tenants",
                        "description": "Organization tenants",
                        "default": []
                    },
                    "role": {
                        "type": "string",
                        "title": "Role",
                        "description": "User's role in this organization"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "url",
                    "name",
                    "address",
                    "is_active",
                    "role"
                ],
                "title": "OrganizationWithRoleResponse"
            },
            "PaginationInfo": {
                "properties": {
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    },
                    "page_size": {
                        "type": "integer",
                        "title": "Page Size"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "total_pages": {
                        "type": "integer",
                        "title": "Total Pages"
                    }
                },
                "type": "object",
                "required": [
                    "page",
                    "page_size",
                    "total",
                    "total_pages"
                ],
                "title": "PaginationInfo"
            },
            "PlatformCategoryCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Unique name of the category",
                        "examples": [
                            "Social Media"
                        ]
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Detailed description of the category's purpose",
                        "examples": [
                            "Platforms used for social media sharing"
                        ]
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Whether the category is currently active and available for use",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "PlatformCategoryCreate",
                "description": "Model for creating a new platform category",
                "examples": [
                    {
                        "description": "Platforms used for social media sharing",
                        "is_active": true,
                        "name": "Social Media"
                    }
                ]
            },
            "PlatformCategoryResponse": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Unique name of the category",
                        "examples": [
                            "Social Media"
                        ]
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Detailed description of the category's purpose",
                        "examples": [
                            "Platforms used for social media sharing"
                        ]
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Whether the category is currently active and available for use",
                        "default": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Unique identifier for the category"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Timestamp when the category was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "Timestamp of last update"
                    },
                    "platforms": {
                        "anyOf": [
                            {
                                "items": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Platforms",
                        "description": "List of platforms in this category",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "created_at",
                    "updated_at"
                ],
                "title": "PlatformCategoryResponse",
                "description": "Response model for platform category operations.\n\nExtends PlatformCategoryBase to include system-generated fields.",
                "examples": [
                    {
                        "created_at": "2025-03-28T10:00:00Z",
                        "description": "Platforms used for social media sharing",
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "is_active": true,
                        "name": "Social Media",
                        "platforms": [],
                        "updated_at": "2025-03-28T10:00:00Z"
                    }
                ]
            },
            "PlatformCategoryUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Unique name of the category"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Detailed description of the category's purpose"
                    },
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active",
                        "description": "Whether the category is currently active and available for use"
                    }
                },
                "type": "object",
                "title": "PlatformCategoryUpdate",
                "description": "Model for updating an existing platform category.\n\nAll fields are optional to support partial updates.",
                "examples": [
                    {
                        "description": "Updated description of the category",
                        "is_active": true,
                        "name": "Updated Category Name"
                    }
                ]
            },
            "PlatformCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Unique name of the platform",
                        "examples": [
                            "The Platform"
                        ]
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Detailed description of the platform's purpose and features",
                        "examples": [
                            "The description of the platform"
                        ]
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Whether the platform is currently active and available for use",
                        "default": true
                    },
                    "url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Url",
                        "description": "URL of the platform's website",
                        "examples": [
                            "https://www.example.com"
                        ]
                    },
                    "category_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Category Id",
                        "description": "Category to assign the platform to"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "category_id"
                ],
                "title": "PlatformCreate",
                "description": "Model for creating a new platform",
                "examples": [
                    {
                        "description": "A detailed description of the platform",
                        "is_active": true,
                        "name": "Sample Platform",
                        "url": "https://www.example.com"
                    }
                ]
            },
            "PlatformMappingBase": {
                "properties": {
                    "platform_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Platform Id",
                        "description": "UUID of the platform to map",
                        "examples": [
                            "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        ]
                    },
                    "is_enabled": {
                        "type": "boolean",
                        "title": "Is Enabled",
                        "description": "Whether this platform mapping is enabled",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "platform_id"
                ],
                "title": "PlatformMappingBase",
                "description": "Model for platform mapping configuration.\n\nMaps platforms to content protection settings."
            },
            "PlatformPatchMapping": {
                "properties": {
                    "platform_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Platform Id",
                        "description": "UUID of the platform to map",
                        "examples": [
                            "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        ]
                    },
                    "is_enabled": {
                        "type": "boolean",
                        "title": "Is Enabled",
                        "description": "Whether this platform mapping should be enabled"
                    }
                },
                "type": "object",
                "required": [
                    "platform_id",
                    "is_enabled"
                ],
                "title": "PlatformPatchMapping",
                "description": "Model for updating platform mapping configuration.\n\nUsed specifically for patch operations to enable/disable platforms.",
                "examples": [
                    {
                        "is_enabled": true,
                        "platform_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    }
                ]
            },
            "PlatformResponse": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Unique name of the platform",
                        "examples": [
                            "The Platform"
                        ]
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Detailed description of the platform's purpose and features",
                        "examples": [
                            "The description of the platform"
                        ]
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Whether the platform is currently active and available for use",
                        "default": true
                    },
                    "url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Url",
                        "description": "URL of the platform's website",
                        "examples": [
                            "https://www.example.com"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id",
                        "description": "Unique identifier for the platform"
                    },
                    "category_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Category Id",
                        "description": "ID of the category this platform belongs to"
                    },
                    "category_name": {
                        "type": "string",
                        "title": "Category Name",
                        "description": "Name of the category this platform belongs to"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Timestamp when the platform was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "Timestamp of last update"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "category_id",
                    "category_name",
                    "created_at",
                    "updated_at"
                ],
                "title": "PlatformResponse",
                "description": "Response model for platform operations.\n\nExtends PlatformBase to include system-generated fields.",
                "examples": [
                    {
                        "category_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "category_name": "Social Media",
                        "created_at": "2024-03-01T12:00:00Z",
                        "description": "The description of the platform",
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "is_active": true,
                        "name": "The Platform",
                        "updated_at": "2024-03-01T12:00:00Z",
                        "url": "https://www.example.com"
                    }
                ]
            },
            "PlatformUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Unique name of the platform"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Detailed description of the platform's purpose and features"
                    },
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active",
                        "description": "Whether the platform is currently active and available for use"
                    },
                    "category_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Category Id",
                        "description": "Category to assign the platform to (cannot be null, but can be changed to another valid category)"
                    },
                    "url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Url",
                        "description": "URL of the platform's website"
                    }
                },
                "type": "object",
                "title": "PlatformUpdate",
                "description": "Model for updating an existing platform.\n\nAll fields are optional to support partial updates.",
                "examples": [
                    {
                        "category_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "description": "Updated description of the platform",
                        "is_active": true,
                        "name": "Updated Platform Name",
                        "url": "https://www.example.com"
                    }
                ]
            },
            "PresignedUrlRequest": {
                "properties": {
                    "fileName": {
                        "type": "string",
                        "title": "Filename"
                    },
                    "fileType": {
                        "type": "string",
                        "title": "Filetype"
                    },
                    "folderPath": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Folderpath"
                    },
                    "uploadType": {
                        "type": "string",
                        "title": "Uploadtype",
                        "default": "normal"
                    }
                },
                "type": "object",
                "required": [
                    "fileName",
                    "fileType"
                ],
                "title": "PresignedUrlRequest"
            },
            "PresignedUrlResponse": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url"
                    },
                    "key": {
                        "type": "string",
                        "title": "Key"
                    },
                    "bucket": {
                        "type": "string",
                        "title": "Bucket"
                    },
                    "fields": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Fields"
                    }
                },
                "type": "object",
                "required": [
                    "url",
                    "key",
                    "bucket",
                    "fields"
                ],
                "title": "PresignedUrlResponse"
            },
            "PublisherCreateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id"
                    },
                    "publisher_logo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Logo"
                    },
                    "publisher_fav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Fav"
                    },
                    "publisher_bw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Bw"
                    },
                    "publisher_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Url"
                    },
                    "publisher_hierarchy": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Hierarchy"
                    },
                    "publisher_hierarchy_logo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Hierarchy Logo"
                    },
                    "publisher_hierarchy_fav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Hierarchy Fav"
                    },
                    "publisher_hierarchy_bw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Hierarchy Bw"
                    },
                    "publisher_hierarchy_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Hierarchy Url"
                    },
                    "drm": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Drm"
                    },
                    "organization_address": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Address"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "PublisherCreateRequest"
            },
            "PublisherResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id"
                    },
                    "publisher_logo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Logo"
                    },
                    "publisher_fav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Fav"
                    },
                    "publisher_bw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Bw"
                    },
                    "publisher_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Url"
                    },
                    "publisher_hierarchy": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Hierarchy"
                    },
                    "publisher_hierarchy_logo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Hierarchy Logo"
                    },
                    "publisher_hierarchy_fav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Hierarchy Fav"
                    },
                    "publisher_hierarchy_bw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Hierarchy Bw"
                    },
                    "publisher_hierarchy_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher Hierarchy Url"
                    },
                    "drm": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Drm"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "PublisherResponse"
            },
            "RealTimeDocumentModel": {
                "properties": {
                    "organizationId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organizationid",
                        "default": ""
                    },
                    "organization": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization",
                        "default": ""
                    },
                    "publisherId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherid",
                        "default": ""
                    },
                    "publisher": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher",
                        "default": ""
                    },
                    "publisherLogo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherlogo",
                        "default": ""
                    },
                    "publisherFav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherfav",
                        "default": ""
                    },
                    "publisherBw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherbw",
                        "default": ""
                    },
                    "publisherUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherurl",
                        "default": ""
                    },
                    "publisherHierarchy": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchy",
                        "default": ""
                    },
                    "publisherHierarchyLogo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchylogo",
                        "default": ""
                    },
                    "publisherHierarchyFav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchyfav",
                        "default": ""
                    },
                    "publisherHierarchyBw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchybw",
                        "default": ""
                    },
                    "publisherHierarchyUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchyurl",
                        "default": ""
                    },
                    "drm": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DRMAppsEnum"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Drm",
                        "description": "List of allowed distribution apps",
                        "example": [
                            "aspen",
                            "kallm"
                        ]
                    },
                    "producer_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Producer Id",
                        "default": ""
                    },
                    "denomination": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Denomination",
                        "default": ""
                    },
                    "evergreen": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Evergreen",
                        "default": true
                    },
                    "author": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Author",
                        "description": "List of authors or comma-separated string of authors",
                        "default": []
                    },
                    "isbn": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Isbn",
                        "default": ""
                    },
                    "itemTitle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemtitle",
                        "default": ""
                    },
                    "itemSubtitle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemsubtitle",
                        "default": ""
                    },
                    "itemImage": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemimage",
                        "default": ""
                    },
                    "itemUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemurl",
                        "default": ""
                    },
                    "itemFile": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemfile",
                        "default": ""
                    },
                    "itemSummary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemsummary",
                        "default": ""
                    },
                    "itemNumber": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemnumber",
                        "default": ""
                    },
                    "itemExtra": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Itemextra",
                        "default": ""
                    },
                    "item_tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Item Tags",
                        "description": "List of tags or comma-separated string of tags",
                        "default": []
                    },
                    "h2Title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Title",
                        "default": ""
                    },
                    "h2Subtitle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Subtitle",
                        "default": ""
                    },
                    "h2Image": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Image",
                        "default": ""
                    },
                    "h2Url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Url",
                        "default": ""
                    },
                    "h2File": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2File",
                        "default": ""
                    },
                    "h2Summary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Summary",
                        "default": ""
                    },
                    "h2Number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Number",
                        "default": ""
                    },
                    "h2Extra": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H2Extra",
                        "default": ""
                    },
                    "h3Title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Title",
                        "default": ""
                    },
                    "h3Subtitle": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Subtitle",
                        "default": ""
                    },
                    "h3Image": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Image",
                        "default": ""
                    },
                    "h3Url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Url",
                        "default": ""
                    },
                    "h3File": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3File",
                        "default": ""
                    },
                    "h3Summary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Summary",
                        "default": ""
                    },
                    "h3Number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Number",
                        "default": ""
                    },
                    "h3Extra": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "H3Extra",
                        "default": ""
                    },
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "default": ""
                    },
                    "duration": {
                        "type": "string",
                        "title": "Duration",
                        "default": ""
                    },
                    "pages": {
                        "type": "string",
                        "title": "Pages",
                        "default": ""
                    },
                    "publicationDate": {
                        "type": "string",
                        "title": "Publicationdate",
                        "default": ""
                    },
                    "hostedUrl": {
                        "type": "string",
                        "title": "Hostedurl",
                        "default": ""
                    },
                    "pubType": {
                        "type": "string",
                        "title": "Pubtype",
                        "default": ""
                    },
                    "filename": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Filename",
                        "default": ""
                    },
                    "content": {
                        "type": "string",
                        "title": "Content"
                    }
                },
                "type": "object",
                "required": [
                    "content"
                ],
                "title": "RealTimeDocumentModel"
            },
            "RouteAuthorizationRequest": {
                "properties": {
                    "client_id": {
                        "type": "string",
                        "title": "Client Id"
                    }
                },
                "type": "object",
                "required": [
                    "client_id"
                ],
                "title": "RouteAuthorizationRequest"
            },
            "StatusEnum": {
                "type": "string",
                "enum": [
                    "PENDING",
                    "FAILED",
                    "SUCCESSFUL",
                    "STARTED"
                ],
                "title": "StatusEnum"
            },
            "TenantResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Tenant ID"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Tenant name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "TenantResponse"
            },
            "TranscribedItemDetails": {
                "properties": {
                    "transcription_status": {
                        "type": "string",
                        "title": "Transcription Status"
                    },
                    "s3_uri": {
                        "type": "string",
                        "title": "S3 Uri"
                    },
                    "batch_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Batch Id"
                    },
                    "task_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Id"
                    },
                    "item_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Item Id"
                    },
                    "duration": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Duration"
                    }
                },
                "type": "object",
                "required": [
                    "transcription_status",
                    "s3_uri"
                ],
                "title": "TranscribedItemDetails",
                "description": "Request model that Whisper Service will send for a successfully transcribed item."
            },
            "UserCreateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "User's full name"
                    },
                    "auth_id": {
                        "type": "string",
                        "title": "Auth Id",
                        "description": "User Auth ID"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "User email"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "auth_id",
                    "email"
                ],
                "title": "UserCreateRequest"
            },
            "UserCreateResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "User ID"
                    },
                    "auth_id": {
                        "type": "string",
                        "title": "Auth Id",
                        "description": "User Auth ID"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "User email"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "User's full name"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "User is active"
                    },
                    "is_verified": {
                        "type": "boolean",
                        "title": "Is Verified",
                        "description": "User is verified"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "User created at"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "User updated at"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "auth_id",
                    "email",
                    "name",
                    "is_active",
                    "is_verified",
                    "created_at",
                    "updated_at"
                ],
                "title": "UserCreateResponse"
            },
            "UserWithOrganizationsResponse": {
                "properties": {
                    "organizations": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/OrganizationWithRoleResponse"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organizations"
                    },
                    "user": {
                        "$ref": "#/components/schemas/app__routers__types__UserResponse"
                    }
                },
                "type": "object",
                "required": [
                    "user"
                ],
                "title": "UserWithOrganizationsResponse"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "WhisperTranscriptMetadataModel": {
                "properties": {
                    "cluster": {
                        "type": "string",
                        "title": "Cluster"
                    },
                    "collectionName": {
                        "type": "string",
                        "title": "Collectionname"
                    },
                    "tenant": {
                        "type": "string",
                        "title": "Tenant"
                    },
                    "organizationId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organizationid",
                        "default": ""
                    },
                    "organization": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization",
                        "default": ""
                    },
                    "publisherId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherid",
                        "default": ""
                    },
                    "publisher": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisher",
                        "default": ""
                    },
                    "publisherLogo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherlogo",
                        "default": ""
                    },
                    "publisherFav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherfav",
                        "default": ""
                    },
                    "publisherBw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherbw",
                        "default": ""
                    },
                    "publisherUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherurl",
                        "default": ""
                    },
                    "publisherHierarchy": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchy",
                        "default": ""
                    },
                    "publisherHierarchyLogo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchylogo",
                        "default": ""
                    },
                    "publisherHierarchyFav": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchyfav",
                        "default": ""
                    },
                    "publisherHierarchyBw": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchybw",
                        "default": ""
                    },
                    "publisherHierarchyUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Publisherhierarchyurl",
                        "default": ""
                    },
                    "drm": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DRMAppsEnum"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Drm",
                        "description": "List of allowed distribution apps",
                        "example": [
                            "aspen",
                            "kallm"
                        ]
                    },
                    "url": {
                        "type": "string",
                        "title": "Url"
                    },
                    "metadata": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Metadata"
                    },
                    "task_id": {
                        "type": "string",
                        "title": "Task Id"
                    },
                    "batch_id": {
                        "type": "string",
                        "title": "Batch Id"
                    }
                },
                "type": "object",
                "required": [
                    "cluster",
                    "collectionName",
                    "tenant",
                    "url",
                    "metadata",
                    "task_id",
                    "batch_id"
                ],
                "title": "WhisperTranscriptMetadataModel"
            },
            "app__routers__organization_users__UserResponse": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "role"
                ],
                "title": "UserResponse"
            },
            "app__routers__types__UserResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "User ID"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "User email"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "User's full name"
                    },
                    "auth_id": {
                        "type": "string",
                        "title": "Auth Id",
                        "description": "User Auth ID"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "User is active"
                    },
                    "is_verified": {
                        "type": "boolean",
                        "title": "Is Verified",
                        "description": "User is verified"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At",
                        "description": "User created at"
                    },
                    "updated_at": {
                        "type": "string",
                        "title": "Updated At",
                        "description": "User updated at"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "name",
                    "auth_id",
                    "is_active",
                    "is_verified",
                    "created_at",
                    "updated_at"
                ],
                "title": "UserResponse"
            }
        },
        "securitySchemes": {
            "HTTPBearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}